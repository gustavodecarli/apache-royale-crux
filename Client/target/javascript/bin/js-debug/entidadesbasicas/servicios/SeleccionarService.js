/**
 * Generated by Apache Royale Compiler from entidadesbasicas/servicios/SeleccionarService.as
 * entidadesbasicas.servicios.SeleccionarService
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('entidadesbasicas.servicios.SeleccionarService');
/* Royale Dependency List: entidadesbasicas.modelo.base.ModeloBase,mx.rpc.AsyncToken,mx.rpc.remoting.mxml.RemoteObject,org.apache.royale.crux.utils.services.MockDelegateHelper,org.apache.royale.events.IEventDispatcher*/




/**
 * @constructor
 */
entidadesbasicas.servicios.SeleccionarService = function() {
  this.entidadesbasicas_servicios_SeleccionarService_mockHelper = new org.apache.royale.crux.utils.services.MockDelegateHelper();
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('entidadesbasicas.servicios.SeleccionarService', entidadesbasicas.servicios.SeleccionarService);


/**
 * @export
 * @type {org.apache.royale.events.IEventDispatcher}
 */
entidadesbasicas.servicios.SeleccionarService.prototype.dispatcher = null;


/**
 * @private
 * @type {org.apache.royale.crux.utils.services.MockDelegateHelper}
 */
entidadesbasicas.servicios.SeleccionarService.prototype.entidadesbasicas_servicios_SeleccionarService_mockHelper = null;


/**
 * In a real app, we'd invoke a RemoteObject, HTTPService, etc.
 * For this simple example, we'll set a random ID on the returned User
 * to simulate the process of saving a User.
 * @export
 * @param {entidadesbasicas.modelo.base.ModeloBase} user
 * @return {mx.rpc.AsyncToken}
 */
entidadesbasicas.servicios.SeleccionarService.prototype.ejecutar = function(user) {
  var /** @type {mx.rpc.remoting.mxml.RemoteObject} */ unRemoteObject = new mx.rpc.remoting.mxml.RemoteObject();
  unRemoteObject.destination = "monedas";
  unRemoteObject.endpoint = "http://localhost:8080/CairngormServer/messagebroker/amf";
  return unRemoteObject.getOperation("seleccionar").send();
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
entidadesbasicas.servicios.SeleccionarService.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SeleccionarService', qName: 'entidadesbasicas.servicios.SeleccionarService', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
entidadesbasicas.servicios.SeleccionarService.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'dispatcher': { type: 'org.apache.royale.events.IEventDispatcher', get_set: function (/** entidadesbasicas.servicios.SeleccionarService */ inst, /** * */ v) {return v !== undefined ? inst.dispatcher = v : inst.dispatcher;}, metadata: function () { return [ { name: 'Dispatcher' } ]; }}
      };
    },
    methods: function () {
      return {
        'SeleccionarService': { type: '', declaredBy: 'entidadesbasicas.servicios.SeleccionarService'},
        'ejecutar': { type: 'mx.rpc.AsyncToken', declaredBy: 'entidadesbasicas.servicios.SeleccionarService', parameters: function () { return [ 'entidadesbasicas.modelo.base.ModeloBase', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
entidadesbasicas.servicios.SeleccionarService.prototype.ROYALE_COMPILE_FLAGS = 15;

//# sourceMappingURL=./SeleccionarService.js.map
