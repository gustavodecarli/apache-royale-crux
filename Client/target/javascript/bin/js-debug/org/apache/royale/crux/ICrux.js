/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/ICrux.as
 * org.apache.royale.crux.ICrux
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.ICrux');
/* Royale Dependency List: org.apache.royale.crux.IBeanFactory,org.apache.royale.crux.ICruxConfig,org.apache.royale.events.IEventDispatcher*/




/**
 * @interface
 */
org.apache.royale.crux.ICrux = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.ICrux', org.apache.royale.crux.ICrux);
/**  * @type {boolean}
 */org.apache.royale.crux.ICrux.prototype.catchViews;
/**  * @type {org.apache.royale.events.IEventDispatcher}
 */org.apache.royale.crux.ICrux.prototype.dispatcher;
/**  * @type {org.apache.royale.events.IEventDispatcher}
 */org.apache.royale.crux.ICrux.prototype.globalDispatcher;
/**  * @type {org.apache.royale.crux.ICruxConfig}
 */org.apache.royale.crux.ICrux.prototype.config;
/**  * @type {Array}
 */org.apache.royale.crux.ICrux.prototype.beanProviders;
/**  * @type {org.apache.royale.crux.IBeanFactory}
 */org.apache.royale.crux.ICrux.prototype.beanFactory;
/**  * @type {Array}
 */org.apache.royale.crux.ICrux.prototype.processors;
/**  * @type {Array}
 */org.apache.royale.crux.ICrux.prototype.customProcessors;
/**  * @type {org.apache.royale.crux.ICrux}
 */org.apache.royale.crux.ICrux.prototype.parentCrux;
org.apache.royale.crux.ICrux.prototype.init = function() {
};
org.apache.royale.crux.ICrux.prototype.tearDown = function() {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.ICrux.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ICrux', qName: 'org.apache.royale.crux.ICrux', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.ICrux.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'catchViews': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICrux'},
        'dispatcher': { type: 'org.apache.royale.events.IEventDispatcher', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICrux'},
        'globalDispatcher': { type: 'org.apache.royale.events.IEventDispatcher', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICrux'},
        'config': { type: 'org.apache.royale.crux.ICruxConfig', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICrux'},
        'beanProviders': { type: 'Array', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICrux'},
        'beanFactory': { type: 'org.apache.royale.crux.IBeanFactory', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICrux'},
        'processors': { type: 'Array', access: 'readonly', declaredBy: 'org.apache.royale.crux.ICrux'},
        'customProcessors': { type: 'Array', access: 'writeonly', declaredBy: 'org.apache.royale.crux.ICrux'},
        'parentCrux': { type: 'org.apache.royale.crux.ICrux', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICrux'}
      };
    },
    methods: function () {
      return {
        'init': { type: 'void', declaredBy: 'org.apache.royale.crux.ICrux'},
        'tearDown': { type: 'void', declaredBy: 'org.apache.royale.crux.ICrux'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.ICrux.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./ICrux.js.map
