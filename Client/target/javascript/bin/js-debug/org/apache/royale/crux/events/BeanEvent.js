/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/events/BeanEvent.as
 * org.apache.royale.crux.events.BeanEvent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.events.BeanEvent');
/* Royale Dependency List: org.apache.royale.events.IRoyaleEvent*/

goog.require('org.apache.royale.events.Event');



/**
 * Constructor
 * @constructor
 * @extends {org.apache.royale.events.Event}
 * @param {string} type
 * @param {*=} source
 * @param {string=} beanName
 */
org.apache.royale.crux.events.BeanEvent = function(type, source, beanName) {
  source = typeof source !== 'undefined' ? source : null;
  beanName = typeof beanName !== 'undefined' ? beanName : null;
  org.apache.royale.crux.events.BeanEvent.base(this, 'constructor', type, true, true);
  this.source = source;
  this.beanName = beanName;
};
goog.inherits(org.apache.royale.crux.events.BeanEvent, org.apache.royale.events.Event);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.events.BeanEvent', org.apache.royale.crux.events.BeanEvent);


/**
 * @export
 * @const
 * @type {string}
 */
org.apache.royale.crux.events.BeanEvent.ADD_BEAN = "addBean";


/**
 * @export
 * @const
 * @type {string}
 */
org.apache.royale.crux.events.BeanEvent.SET_UP_BEAN = "setUpBean";


/**
 * @export
 * @const
 * @type {string}
 */
org.apache.royale.crux.events.BeanEvent.TEAR_DOWN_BEAN = "tearDownBean";


/**
 * @export
 * @const
 * @type {string}
 */
org.apache.royale.crux.events.BeanEvent.REMOVE_BEAN = "removeBean";


/**
 * @export
 * @type {*}
 */
org.apache.royale.crux.events.BeanEvent.prototype.source;


/**
 * @export
 * @type {string}
 */
org.apache.royale.crux.events.BeanEvent.prototype.beanName;


/**
 * @asprivate
 * @export
 * @override
 */
org.apache.royale.crux.events.BeanEvent.prototype.cloneEvent = function() {
  return new org.apache.royale.crux.events.BeanEvent(this.type, this.source);
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.events.BeanEvent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'BeanEvent', qName: 'org.apache.royale.crux.events.BeanEvent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.events.BeanEvent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'source': { type: '*', get_set: function f(/** org.apache.royale.crux.events.BeanEvent */ inst, /** * */ v) {return v !== f ? inst.source = v : inst.source;}},
        'beanName': { type: 'String', get_set: function (/** org.apache.royale.crux.events.BeanEvent */ inst, /** * */ v) {return v !== undefined ? inst.beanName = v : inst.beanName;}}
      };
    },
    methods: function () {
      return {
        'BeanEvent': { type: '', declaredBy: 'org.apache.royale.crux.events.BeanEvent', parameters: function () { return [ 'String', false ,'*', true ,'String', true ]; }},
        'cloneEvent': { type: 'org.apache.royale.events.IRoyaleEvent', declaredBy: 'org.apache.royale.crux.events.BeanEvent'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.events.BeanEvent.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./BeanEvent.js.map
