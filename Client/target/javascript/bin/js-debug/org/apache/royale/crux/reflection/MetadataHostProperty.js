/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/reflection/MetadataHostProperty.as
 * org.apache.royale.crux.reflection.MetadataHostProperty
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.reflection.MetadataHostProperty');
/* Royale Dependency List: org.apache.royale.reflection.VariableDefinition*/

goog.require('org.apache.royale.crux.reflection.BindableMetadataHost');



/**
 * Constructor
 * @constructor
 * @extends {org.apache.royale.crux.reflection.BindableMetadataHost}
 */
org.apache.royale.crux.reflection.MetadataHostProperty = function() {
  org.apache.royale.crux.reflection.MetadataHostProperty.base(this, 'constructor');
};
goog.inherits(org.apache.royale.crux.reflection.MetadataHostProperty, org.apache.royale.crux.reflection.BindableMetadataHost);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.reflection.MetadataHostProperty', org.apache.royale.crux.reflection.MetadataHostProperty);


/**
 * @protected
 * @type {org.apache.royale.reflection.VariableDefinition}
 */
org.apache.royale.crux.reflection.MetadataHostProperty.prototype._sourceDefinition;


org.apache.royale.crux.reflection.MetadataHostProperty.prototype.get__sourceDefinition = function() {
  return this._sourceDefinition;
};


org.apache.royale.crux.reflection.MetadataHostProperty.prototype.set__sourceDefinition = function(value) {
  this._sourceDefinition = value;
};


Object.defineProperties(org.apache.royale.crux.reflection.MetadataHostProperty.prototype, /** @lends {org.apache.royale.crux.reflection.MetadataHostProperty.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.reflection.VariableDefinition} */
sourceDefinition: {
get: org.apache.royale.crux.reflection.MetadataHostProperty.prototype.get__sourceDefinition,
set: org.apache.royale.crux.reflection.MetadataHostProperty.prototype.set__sourceDefinition}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.reflection.MetadataHostProperty.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MetadataHostProperty', qName: 'org.apache.royale.crux.reflection.MetadataHostProperty', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.reflection.MetadataHostProperty.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'sourceDefinition': { type: 'org.apache.royale.reflection.VariableDefinition', access: 'readwrite', declaredBy: 'org.apache.royale.crux.reflection.MetadataHostProperty'}
      };
    },
    methods: function () {
      return {
        'MetadataHostProperty': { type: '', declaredBy: 'org.apache.royale.crux.reflection.MetadataHostProperty'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.reflection.MetadataHostProperty.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./MetadataHostProperty.js.map
