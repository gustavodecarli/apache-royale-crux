/**
 * Generated by Apache Royale Compiler from org/apache/royale/reflection/utils/filterForMetaTags.as
 * org.apache.royale.reflection.utils.filterForMetaTags
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.reflection.utils.filterForMetaTags');
/* Royale Dependency List: org.apache.royale.reflection.MemberDefinitionBase*/




/**
 * 
 * @asparam memberDefinitions the member definitions to check
 * @asparam tags the metatags to search for
 * @asparam intoArray optional external Array to add matching definitions to 
 * @asreturn array of matching members
 * @export
 * @param {Array} memberDefinitions
 * @param {Array} tags
 * @param {Array=} intoArray
 * @return {Array}
 */
org.apache.royale.reflection.utils.filterForMetaTags = function(memberDefinitions, tags, intoArray) {
  intoArray = typeof intoArray !== 'undefined' ? intoArray : null;
  var /** @type {Array} */ ret = intoArray ? intoArray : [];
  
/**
 * @const
 * @type {number}
 */
var l = (memberDefinitions.length) >>> 0;
  var /** @type {number} */ tagCount = (tags.length) >>> 0;
  for (var /** @type {number} */ i = 0; i < l; i++) {
    var /** @type {org.apache.royale.reflection.MemberDefinitionBase} */ memberDefintion = memberDefinitions[i];
    for (var /** @type {number} */ j = 0; j < tagCount; j++) {
      if (memberDefintion.retrieveMetaDataByName(org.apache.royale.utils.Language.string(tags[j])).length) {
        ret.push(memberDefintion);
        break;
      }
    }
  }
  return ret;
}
