/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/processors/IProcessor.as
 * org.apache.royale.crux.processors.IProcessor
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.processors.IProcessor');
/* Royale Dependency List: org.apache.royale.crux.ICrux*/




/**
 * @interface
 */
org.apache.royale.crux.processors.IProcessor = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.processors.IProcessor', org.apache.royale.crux.processors.IProcessor);
/**
 * Method used to set reference to parent <code>Crux</code> instance.
 * @export
 * @param {org.apache.royale.crux.ICrux} crux
 */
org.apache.royale.crux.processors.IProcessor.prototype.init = function(crux) {
};
/**  * @type {number}
 */org.apache.royale.crux.processors.IProcessor.prototype.priority;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.processors.IProcessor.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IProcessor', qName: 'org.apache.royale.crux.processors.IProcessor', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.processors.IProcessor.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'priority': { type: 'int', access: 'readonly', declaredBy: 'org.apache.royale.crux.processors.IProcessor'}
      };
    },
    methods: function () {
      return {
        'init': { type: 'void', declaredBy: 'org.apache.royale.crux.processors.IProcessor', parameters: function () { return [ 'org.apache.royale.crux.ICrux', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.processors.IProcessor.prototype.ROYALE_COMPILE_FLAGS = 10;
