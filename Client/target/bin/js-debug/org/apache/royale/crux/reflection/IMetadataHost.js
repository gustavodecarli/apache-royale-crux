/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/reflection/IMetadataHost.as
 * org.apache.royale.crux.reflection.IMetadataHost
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.reflection.IMetadataHost');
/* Royale Dependency List: org.apache.royale.crux.reflection.IMetadataTag*/




/**
 * @interface
 */
org.apache.royale.crux.reflection.IMetadataHost = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.reflection.IMetadataHost', org.apache.royale.crux.reflection.IMetadataHost);
/**  * @type {*}
 */org.apache.royale.crux.reflection.IMetadataHost.prototype.name;
/**  * @type {Object}
 */org.apache.royale.crux.reflection.IMetadataHost.prototype.type;
/**  * @type {Array}
 */org.apache.royale.crux.reflection.IMetadataHost.prototype.metadataTags;
/**
 * Get metadata tag by name
 * @export
 * @param {string} name
 * @return {org.apache.royale.crux.reflection.IMetadataTag}
 */
org.apache.royale.crux.reflection.IMetadataHost.prototype.getMetadataTagByName = function(name) {
};
/**
 * Has metadata tag by name
 * @export
 * @param {string} name
 * @return {boolean}
 */
org.apache.royale.crux.reflection.IMetadataHost.prototype.hasMetadataTagByName = function(name) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.reflection.IMetadataHost.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IMetadataHost', qName: 'org.apache.royale.crux.reflection.IMetadataHost', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.reflection.IMetadataHost.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'name': { type: '*', access: 'readwrite', declaredBy: 'org.apache.royale.crux.reflection.IMetadataHost'},
        'type': { type: 'Class', access: 'readwrite', declaredBy: 'org.apache.royale.crux.reflection.IMetadataHost'},
        'metadataTags': { type: 'Array', access: 'readwrite', declaredBy: 'org.apache.royale.crux.reflection.IMetadataHost'}
      };
    },
    methods: function () {
      return {
        'getMetadataTagByName': { type: 'org.apache.royale.crux.reflection.IMetadataTag', declaredBy: 'org.apache.royale.crux.reflection.IMetadataHost', parameters: function () { return [ 'String', false ]; }},
        'hasMetadataTagByName': { type: 'Boolean', declaredBy: 'org.apache.royale.crux.reflection.IMetadataHost', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.reflection.IMetadataHost.prototype.ROYALE_COMPILE_FLAGS = 10;
