/**
 * Generated by Apache Royale Compiler from org/apache/royale/utils/Base64.as
 * org.apache.royale.utils.Base64
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.utils.Base64');
/* Royale Dependency List: org.apache.royale.utils.BinaryData,org.apache.royale.utils.Language*/




/**
 * @constructor
 */
org.apache.royale.utils.Base64 = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.utils.Base64', org.apache.royale.utils.Base64);


/**
 * @export
 * @param {org.apache.royale.utils.BinaryData} data
 * @return {string}
 */
org.apache.royale.utils.Base64.encode = function(data) {
  var /** @type {number} */ c = 0;
  var /** @type {org.apache.royale.utils.BinaryData} */ out = new org.apache.royale.utils.BinaryData();
  out.length = ((2 + data.length - ((data.length + 2) % 3)) * 4 / 3) >> 0;
  var /** @type {number} */ i = 0;
  var /** @type {number} */ r = (data.length % 3) >> 0;
  var /** @type {number} */ len = (data.length - r) >> 0;
  //var /** @type {number} */ c = 0;
  var /** @type {number} */ outPos = 0;
  while (i < len) {
    c = (data.readByteAt((org.apache.royale.utils.Language._int(i++)) >>> 0) << 16 | data.readByteAt((org.apache.royale.utils.Language._int(i++)) >>> 0) << 8 | data.readByteAt((org.apache.royale.utils.Language._int(i++)) >>> 0)) >>> 0;
    out.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, org.apache.royale.utils.Base64["encodeChars"][org.apache.royale.utils.Language._int(c >>> 18)]);
    out.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, org.apache.royale.utils.Base64["encodeChars"][org.apache.royale.utils.Language._int(c >>> 12 & 0x3f)]);
    out.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, org.apache.royale.utils.Base64["encodeChars"][org.apache.royale.utils.Language._int(c >>> 6 & 0x3f)]);
    out.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, org.apache.royale.utils.Base64["encodeChars"][org.apache.royale.utils.Language._int(c & 0x3f)]);
  }
  if (r == 1) {
    c = data.readByteAt((org.apache.royale.utils.Language._int(i)) >>> 0);
    out.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, org.apache.royale.utils.Base64["encodeChars"][org.apache.royale.utils.Language._int(c >>> 2)]);
    out.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, org.apache.royale.utils.Base64["encodeChars"][org.apache.royale.utils.Language._int((c & 0x03) << 4)]);
    out.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, 61);
    out.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, 61);
  } else if (r == 2) {
    c = (data.readByteAt((org.apache.royale.utils.Language._int(i++)) >>> 0) << 8 | data.readByteAt((org.apache.royale.utils.Language._int(i)) >>> 0)) >>> 0;
    out.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, org.apache.royale.utils.Base64["encodeChars"][org.apache.royale.utils.Language._int(c >>> 10)]);
    out.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, org.apache.royale.utils.Base64["encodeChars"][org.apache.royale.utils.Language._int(c >>> 4 & 0x3f)]);
    out.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, org.apache.royale.utils.Base64["encodeChars"][org.apache.royale.utils.Language._int((c & 0x0f) << 2)]);
    out.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, 61);
  }
  return out.readUTFBytes((out.length) >>> 0);
};


/**
 * @export
 * @param {string} str
 * @return {org.apache.royale.utils.BinaryData}
 */
org.apache.royale.utils.Base64.decode = function(str) {
  var /** @type {number} */ c3 = 0;
  var /** @type {number} */ c4 = 0;
  var /** @type {number} */ c1 = 0;
  var /** @type {number} */ c2 = 0;
  //var /** @type {number} */ c1 = 0;
  //var /** @type {number} */ c2 = 0;
  //var /** @type {number} */ c3 = 0;
  //var /** @type {number} */ c4 = 0;
  var /** @type {number} */ i = 0;
  var /** @type {number} */ len = (str.length) >> 0;
  var /** @type {org.apache.royale.utils.BinaryData} */ byteString = new org.apache.royale.utils.BinaryData();
  byteString.writeUTFBytes(str);
  var /** @type {number} */ outPos = 0;
  while (i < len) {
    c1 = org.apache.royale.utils.Base64["decodeChars"][org.apache.royale.utils.Language._int(byteString.readByteAt((i++) >>> 0))];
    if (c1 == -1)
      break;
    c2 = org.apache.royale.utils.Base64["decodeChars"][org.apache.royale.utils.Language._int(byteString.readByteAt((i++) >>> 0))];
    if (c2 == -1)
      break;
    byteString.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, (c1 << 2) | ((c2 & 0x30) >> 4));
    c3 = (byteString.readByteAt((org.apache.royale.utils.Language._int(i++)) >>> 0)) >> 0;
    if (c3 == 61) {
      byteString.length = outPos;
      return byteString;
    }
    c3 = org.apache.royale.utils.Base64["decodeChars"][org.apache.royale.utils.Language._int(c3)];
    if (c3 == -1)
      break;
    byteString.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, ((c2 & 0x0f) << 4) | ((c3 & 0x3c) >> 2));
    c4 = (byteString.readByteAt((org.apache.royale.utils.Language._int(i++)) >>> 0)) >> 0;
    if (c4 == 61) {
      byteString.length = outPos;
      return byteString;
    }
    c4 = org.apache.royale.utils.Base64["decodeChars"][org.apache.royale.utils.Language._int(c4)];
    if (c4 == -1)
      break;
    byteString.writeByteAt((org.apache.royale.utils.Language._int(outPos++)) >>> 0, ((c3 & 0x03) << 6) | c4);
  }
  byteString.length = outPos;
  byteString.position = 0;
  return byteString;
};


/**
 * @export
 * @return {Array}
 */
org.apache.royale.utils.Base64.InitEncoreChar = function() {
  var /** @type {Array} */ encodeChars = org.apache.royale.utils.Language.arrayAsVector(64, 'int');
  var /** @type {string} */ chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  for (var /** @type {number} */ i = 0; i < 64; i++) {
    encodeChars[i] = (chars.charCodeAt(i)) >> 0;
  }
  return encodeChars;
};


/**
 * @export
 * @return {Array}
 */
org.apache.royale.utils.Base64.InitDecodeChar = function() {
  var /** @type {Array} */ decodeChars = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];
  return decodeChars;
};


/**
 * @private
 * @type {Array}
 */
org.apache.royale.utils.Base64._encodeChars;


/**
 * @private
 * @type {Array}
 */
org.apache.royale.utils.Base64._decodeChars;


org.apache.royale.utils.Base64.get__encodeChars = function() {
  if (!org.apache.royale.utils.Base64._encodeChars) {
    org.apache.royale.utils.Base64._encodeChars = org.apache.royale.utils.Base64.InitEncoreChar();
  }
  return org.apache.royale.utils.Base64._encodeChars;
};


org.apache.royale.utils.Base64.get__decodeChars = function() {
  if (!org.apache.royale.utils.Base64._decodeChars) {
    org.apache.royale.utils.Base64._decodeChars = org.apache.royale.utils.Base64.InitDecodeChar();
  }
  return org.apache.royale.utils.Base64._decodeChars;
};


Object.defineProperties(org.apache.royale.utils.Base64, /** @lends {org.apache.royale.utils.Base64} */ {
/**
  * @export
  * @type {Array.<number>} */
encodeChars: {
get: org.apache.royale.utils.Base64.get__encodeChars},
/**
  * @export
  * @type {Array.<number>} */
decodeChars: {
get: org.apache.royale.utils.Base64.get__decodeChars}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.utils.Base64.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Base64', qName: 'org.apache.royale.utils.Base64', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.utils.Base64.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        '|encode': { type: 'String', declaredBy: 'org.apache.royale.utils.Base64', parameters: function () { return [ 'org.apache.royale.utils.BinaryData', false ]; }},
        '|decode': { type: 'org.apache.royale.utils.BinaryData', declaredBy: 'org.apache.royale.utils.Base64', parameters: function () { return [ 'String', false ]; }},
        '|InitEncoreChar': { type: 'Vector.<int>', declaredBy: 'org.apache.royale.utils.Base64'},
        '|InitDecodeChar': { type: 'Vector.<int>', declaredBy: 'org.apache.royale.utils.Base64'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.utils.Base64.prototype.ROYALE_COMPILE_FLAGS = 10;
