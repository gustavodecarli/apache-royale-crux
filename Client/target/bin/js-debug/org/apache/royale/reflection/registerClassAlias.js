/**
 * Generated by Apache Royale Compiler from org/apache/royale/reflection/registerClassAlias.as
 * org.apache.royale.reflection.registerClassAlias
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.reflection.registerClassAlias');
/* Royale Dependency List: org.apache.royale.reflection.TypeDefinition*/




/**
 * Sets up an alias mapping for serialization/deserialization purposes
 * This can be auto-generated by the Royale compiler
 * when using class level metadata e.g. [RemoteClass(alias='someAlias')]
 *
 * @asparam aliasName the alias name to use to look up the class definition
 * @asparam classObject the class to map to the alias name
 *
 * @export
 * @param {string} aliasName
 * @param {Object} classObject
 */
org.apache.royale.reflection.registerClassAlias = function(aliasName, classObject) {
  
  if (classObject == null)
    throw new TypeError("Parameter classObject must be non-null.");
  if (aliasName == null)
    throw new TypeError("Parameter aliasName must be non-null.");
  if (aliasName.length == 0)
    throw new TypeError("Parameter aliasName must be non-empty string.");
  org.apache.royale.reflection.TypeDefinition.registerClassAlias(aliasName, classObject);
}
