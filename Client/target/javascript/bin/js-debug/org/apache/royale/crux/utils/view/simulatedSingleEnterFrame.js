/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/utils/view/simulatedSingleEnterFrame.as
 * org.apache.royale.crux.utils.view.simulatedSingleEnterFrame
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.utils.view.simulatedSingleEnterFrame');
/* Royale Dependency List: org.apache.royale.core.IFlexInfo*/
goog.provide('org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support');




/**
 * A utility function to execute a callback after a single 'enterframe'-like delay at appliction level
 *
 * @asparam container
 * @asparam callback a function to execute after the 'frame' delay
 * @asparam removeOnly set to true to erase a previously configured callback on the same container
 *
 * @royaleignorecoercion org.apache.royale.core.WrappedHTMLElement
 * @export
 * @param {org.apache.royale.core.IFlexInfo} container
 * @param {Function} callback
 * @param {boolean=} removeOnly
 */
org.apache.royale.crux.utils.view.simulatedSingleEnterFrame = function(container, callback, removeOnly) {
  removeOnly = typeof removeOnly !== 'undefined' ? removeOnly : false;
  if (!container)
    return;
  
  var /** @type {number} */ id = Number(org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support.map.get(container));
  if (!isNaN(id))
    cancelAnimationFrame(id);
  if (!removeOnly) {
    org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support.map.set(container, requestAnimationFrame(org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support.getListener(callback, container)));
  }
}


/**
 * @constructor
 */
org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support', org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support);


/**
 * @export
 * @const
 * @type {Map}
 */
org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support.map = new Map();


/**
 * @export
 * @param {Function} callback
 * @param {org.apache.royale.core.IFlexInfo} container
 * @return {Function}
 */
org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support.getListener = function(callback, container) {
  return function(timeStamp) {
    org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support.map.delete(container);
    callback();
  };
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Support', qName: 'org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        '|getListener': { type: 'Function', declaredBy: 'org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support', parameters: function () { return [ 'Function', false ,'org.apache.royale.core.IFlexInfo', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.utils.view.simulatedSingleEnterFrame.Support.prototype.ROYALE_COMPILE_FLAGS = 10;
