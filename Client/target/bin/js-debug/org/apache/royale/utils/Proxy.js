/**
 * Generated by Apache Royale Compiler from org/apache/royale/utils/Proxy.as
 * org.apache.royale.utils.Proxy
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.utils.Proxy');
/* Royale Dependency List: */

goog.require('org.apache.royale.events.EventDispatcher');



/**
 *  Constructor.
 * 
 *  @asparam delay The number of milliseconds 
 *  to wait before dispatching the event.
 *  @asparam repeatCount The number of times to dispatch
 *  the event.  If 0, keep dispatching forever.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.events.EventDispatcher}
 */
org.apache.royale.utils.Proxy = function() {
  org.apache.royale.utils.Proxy.base(this, 'constructor');

this.org_apache_royale_utils_Proxy_valueMap = {};
};
goog.inherits(org.apache.royale.utils.Proxy, org.apache.royale.events.EventDispatcher);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.utils.Proxy', org.apache.royale.utils.Proxy);


/**
 * @private
 * @type {Object}
 */
org.apache.royale.utils.Proxy.prototype.org_apache_royale_utils_Proxy_valueMap;


/**
 * @export
 * @param {string} propName
 * @return {*}
 */
org.apache.royale.utils.Proxy.prototype.getProperty = function(propName) {
  return this.org_apache_royale_utils_Proxy_valueMap[propName];
};


/**
 * @export
 * @param {string} propName
 * @param {*} value
 */
org.apache.royale.utils.Proxy.prototype.setProperty = function(propName, value) {
  this.org_apache_royale_utils_Proxy_valueMap[propName] = value;
};


/**
 * @export
 * @param {*} propName
 * @param {...} args
 * @return {*}
 */
org.apache.royale.utils.Proxy.prototype.callProperty = function(propName, args) {
  args = Array.prototype.slice.call(arguments, 1);
  return this.org_apache_royale_utils_Proxy_valueMap[propName].apply(this, args);
};


/**
 * @export
 * @param {string} propName
 * @return {boolean}
 */
org.apache.royale.utils.Proxy.prototype.hasProperty = function(propName) {
  return this.org_apache_royale_utils_Proxy_valueMap.hasOwnProperty(propName);
};


/**
 * @export
 * @param {string} propName
 */
org.apache.royale.utils.Proxy.prototype.deleteProperty = function(propName) {
  delete this.org_apache_royale_utils_Proxy_valueMap[propName];
};


/**
 * @export
 * @return {Array}
 */
org.apache.royale.utils.Proxy.prototype.propertyNames = function() {
  var /** @type {Array} */ names = [];
  for (var /** @type {string} */ p in this.org_apache_royale_utils_Proxy_valueMap)
    names.push(p);
  return names;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.utils.Proxy.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Proxy', qName: 'org.apache.royale.utils.Proxy', kind: 'class', isDynamic: true}] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.utils.Proxy.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'Proxy': { type: '', declaredBy: 'org.apache.royale.utils.Proxy'},
        'getProperty': { type: '*', declaredBy: 'org.apache.royale.utils.Proxy', parameters: function () { return [ 'String', false ]; }},
        'setProperty': { type: 'void', declaredBy: 'org.apache.royale.utils.Proxy', parameters: function () { return [ 'String', false ,'*', false ]; }},
        'callProperty': { type: '*', declaredBy: 'org.apache.royale.utils.Proxy', parameters: function () { return [ '*', false ,'Array', false ]; }},
        'hasProperty': { type: 'Boolean', declaredBy: 'org.apache.royale.utils.Proxy', parameters: function () { return [ 'String', false ]; }},
        'deleteProperty': { type: 'void', declaredBy: 'org.apache.royale.utils.Proxy', parameters: function () { return [ 'String', false ]; }},
        'propertyNames': { type: 'Array', declaredBy: 'org.apache.royale.utils.Proxy'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.utils.Proxy.prototype.ROYALE_COMPILE_FLAGS = 10;
