/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/utils/services/IServiceHelper.as
 * org.apache.royale.crux.utils.services.IServiceHelper
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.utils.services.IServiceHelper');
/* Royale Dependency List: mx.rpc.AsyncToken*/




/**
 * @interface
 */
org.apache.royale.crux.utils.services.IServiceHelper = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.utils.services.IServiceHelper', org.apache.royale.crux.utils.services.IServiceHelper);
/**
 * @export
 * @param {mx.rpc.AsyncToken} call
 * @param {Function} resultHandler
 * @param {Function=} faultHandler
 * @param {Array=} handlerArgs
 * @return {mx.rpc.AsyncToken}
 */
org.apache.royale.crux.utils.services.IServiceHelper.prototype.executeServiceCall = function(call, resultHandler, faultHandler, handlerArgs) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.utils.services.IServiceHelper.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IServiceHelper', qName: 'org.apache.royale.crux.utils.services.IServiceHelper', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.utils.services.IServiceHelper.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'executeServiceCall': { type: 'mx.rpc.AsyncToken', declaredBy: 'org.apache.royale.crux.utils.services.IServiceHelper', parameters: function () { return [ 'mx.rpc.AsyncToken', false ,'Function', false ,'Function', true ,'Array', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.utils.services.IServiceHelper.prototype.ROYALE_COMPILE_FLAGS = 10;
