/**
 * Generated by Apache Royale Compiler from mx/net/Responder.as
 * mx.net.Responder
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.net.Responder');
/* Royale Dependency List: XML*/



/**
 *  Constructs an instance of the responder with the specified handlers.
 *  
 *  @asparam  result Function that should be called when the request has
 *           completed successfully.
 *  @asparam  fault Function that should be called when the request has
 *          completed with errors.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @param {Function} result
 * @param {Function} fault
 */
mx.net.Responder = function(result, fault) {
  ;
  this.resultFunction = result;
  this.faultFunction = fault;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.net.Responder', mx.net.Responder);


/**
 * @export
 * @type {Function}
 */
mx.net.Responder.prototype.resultFunction;


/**
 * @export
 * @type {Function}
 */
mx.net.Responder.prototype.faultFunction;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.net.Responder.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Responder', qName: 'mx.net.Responder', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.net.Responder.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'resultFunction': { type: 'Function', get_set: function (/** mx.net.Responder */ inst, /** * */ v) {return v !== undefined ? inst.resultFunction = v : inst.resultFunction;}},
        'faultFunction': { type: 'Function', get_set: function (/** mx.net.Responder */ inst, /** * */ v) {return v !== undefined ? inst.faultFunction = v : inst.faultFunction;}}
      };
    },
    methods: function () {
      return {
        'Responder': { type: '', declaredBy: 'mx.net.Responder', parameters: function () { return [ 'Function', false ,'Function', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.net.Responder.prototype.ROYALE_COMPILE_FLAGS = 26;
