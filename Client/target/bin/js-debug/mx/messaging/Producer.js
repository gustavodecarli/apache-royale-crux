/**
 * Generated by Apache Royale Compiler from mx/messaging/Producer.as
 * mx.messaging.Producer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.messaging.Producer');
/* Royale Dependency List: mx.core.mx_internal,mx.events.PropertyChangeEvent,mx.logging.Log,mx.messaging.messages.AbstractMessage,mx.messaging.messages.AsyncMessage,mx.messaging.messages.IMessage,XML*/

goog.require('mx.messaging.AbstractProducer');



/**
 *  Constructor.
 * 
 *  @example
 *  <pre>
 *   function sendMessage():void
 *   {
 *       var producer:Producer = new Producer();
 *       producer.destination = "NASDAQ";
 *       var msg:AsyncMessage = new AsyncMessage();
 *       msg.headers.operation = "UPDATE";
 *       msg.body = {"SYMBOL":50.00};
 *       producer.send(msg);
 *   }
 *   </pre>
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion BlazeDS 4
 *  @productversion LCDS 3 
 * @constructor
 * @extends {mx.messaging.AbstractProducer}
 */
mx.messaging.Producer = function() {
  mx.messaging.Producer.base(this, 'constructor');
  this._log = mx.logging.Log.getLogger("mx.messaging.Producer");
  this._agentType = "producer";
};
goog.inherits(mx.messaging.Producer, mx.messaging.AbstractProducer);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.messaging.Producer', mx.messaging.Producer);


/**
 * @export
 * @const
 * @type {number}
 */
mx.messaging.Producer.DEFAULT_PRIORITY = 4;


/**
 * @private
 * @type {string}
 */
mx.messaging.Producer.prototype.mx_messaging_Producer__subtopic = "";


/**
 * @asprivate
 * @export
 * @override
 */
mx.messaging.Producer.prototype.internalSend = function(message, waitForClientId) {
  waitForClientId = typeof waitForClientId !== 'undefined' ? waitForClientId : true;
  if (this.subtopic.length > 0)
    message.headers[mx.messaging.messages.AsyncMessage.SUBTOPIC_HEADER] = this.subtopic;
  this.mx_messaging_Producer_handlePriority(message);
  mx.messaging.Producer.superClass_.internalSend.apply(this, [ message, waitForClientId] );
};


/**
 *  @asprivate
 *  If the priority header has been set on the message, makes sure that the
 *  priority value is within the valid range (0-9). If no priority header
 *  has been set, tries to use Producer's priority level if one exists.
 * 
 * @private
 * @param {mx.messaging.messages.IMessage} message
 */
mx.messaging.Producer.prototype.mx_messaging_Producer_handlePriority = function(message) {
  if (message.headers[mx.messaging.messages.AbstractMessage.PRIORITY_HEADER] != null) {
    var /** @type {number} */ messagePriority = (message.headers[mx.messaging.messages.AbstractMessage.PRIORITY_HEADER]) >> 0;
    if (messagePriority < 0)
      message.headers[mx.messaging.messages.AbstractMessage.PRIORITY_HEADER] = 0;
    else if (messagePriority > 9)
      message.headers[mx.messaging.messages.AbstractMessage.PRIORITY_HEADER] = 9;
  } else if (this.priority > -1) {
    message.headers[mx.messaging.messages.AbstractMessage.PRIORITY_HEADER] = this.priority;
  }
};


mx.messaging.Producer.prototype.get__subtopic = function() {
  return this.mx_messaging_Producer__subtopic;
};


mx.messaging.Producer.prototype.set__subtopic = function(value) {
  if (this.mx_messaging_Producer__subtopic != value) {
    var /** @type {mx.events.PropertyChangeEvent} */ event;
    if (value == null)
      value = "";
    event = mx.events.PropertyChangeEvent.createUpdateEvent(this, "subtopic", this.mx_messaging_Producer__subtopic, value);
    this.mx_messaging_Producer__subtopic = value;
    this.dispatchEvent(event);
  }
};


Object.defineProperties(mx.messaging.Producer.prototype, /** @lends {mx.messaging.Producer.prototype} */ {
/**
  * @export
  * @type {string} */
subtopic: {
get: mx.messaging.Producer.prototype.get__subtopic,
set: mx.messaging.Producer.prototype.set__subtopic}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.messaging.Producer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Producer', qName: 'mx.messaging.Producer', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.messaging.Producer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'subtopic': { type: 'String', access: 'readwrite', declaredBy: 'mx.messaging.Producer', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'propertyChange' } ] } ]; }}
      };
    },
    methods: function () {
      return {
        'Producer': { type: '', declaredBy: 'mx.messaging.Producer'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.messaging.Producer.prototype.ROYALE_COMPILE_FLAGS = 26;
