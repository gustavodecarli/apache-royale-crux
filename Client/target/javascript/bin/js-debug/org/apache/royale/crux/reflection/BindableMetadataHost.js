/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/reflection/BindableMetadataHost.as
 * org.apache.royale.crux.reflection.BindableMetadataHost
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.reflection.BindableMetadataHost');
/* Royale Dependency List: org.apache.royale.crux.reflection.IMetadataTag*/

goog.require('org.apache.royale.crux.reflection.BaseMetadataHost');



/**
 * Constructor
 * @constructor
 * @extends {org.apache.royale.crux.reflection.BaseMetadataHost}
 */
org.apache.royale.crux.reflection.BindableMetadataHost = function() {
  org.apache.royale.crux.reflection.BindableMetadataHost.base(this, 'constructor');
};
goog.inherits(org.apache.royale.crux.reflection.BindableMetadataHost, org.apache.royale.crux.reflection.BaseMetadataHost);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.reflection.BindableMetadataHost', org.apache.royale.crux.reflection.BindableMetadataHost);


org.apache.royale.crux.reflection.BindableMetadataHost.prototype.get__isBindable = function() {
  var foreachiter0_target = this.metadataTags;
  for (var foreachiter0 in foreachiter0_target) 
  {
  var tag = foreachiter0_target[foreachiter0];
  {
    if (tag.name == "Bindable")
      return true;
  }}
  
  return false;
};


Object.defineProperties(org.apache.royale.crux.reflection.BindableMetadataHost.prototype, /** @lends {org.apache.royale.crux.reflection.BindableMetadataHost.prototype} */ {
/**
  * @export
  * @type {boolean} */
isBindable: {
get: org.apache.royale.crux.reflection.BindableMetadataHost.prototype.get__isBindable}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.reflection.BindableMetadataHost.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'BindableMetadataHost', qName: 'org.apache.royale.crux.reflection.BindableMetadataHost', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.reflection.BindableMetadataHost.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'isBindable': { type: 'Boolean', access: 'readonly', declaredBy: 'org.apache.royale.crux.reflection.BindableMetadataHost'}
      };
    },
    methods: function () {
      return {
        'BindableMetadataHost': { type: '', declaredBy: 'org.apache.royale.crux.reflection.BindableMetadataHost'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.reflection.BindableMetadataHost.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./BindableMetadataHost.js.map
