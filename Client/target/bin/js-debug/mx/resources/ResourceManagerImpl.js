/**
 * Generated by Apache Royale Compiler from mx/resources/ResourceManagerImpl.as
 * mx.resources.ResourceManagerImpl
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.resources.ResourceManagerImpl');
/* Royale Dependency List: mx.core.mx_internal,mx.managers.SystemManagerGlobals,mx.modules.IModuleInfo,mx.resources.LocaleSorter,mx.resources.ResourceBundle,mx.utils.StringUtil,org.apache.royale.events.Event,org.apache.royale.reflection.getDefinitionByName,org.apache.royale.utils.LocaleUtils,org.apache.royale.utils.Language,XML*/
goog.provide('mx.resources.ResourceManagerImpl.ResourceBundleProxy');
goog.provide('mx.resources.ResourceManagerImpl.ResourceEventDispatcher');
goog.provide('mx.resources.ResourceManagerImpl.ResourceModuleInfo');

goog.require('mx.resources.IResourceBundle');
goog.require('mx.resources.IResourceManager');
goog.require('org.apache.royale.events.EventDispatcher');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @extends {org.apache.royale.events.EventDispatcher}
 * @implements {mx.resources.IResourceManager}
 */
mx.resources.ResourceManagerImpl = function() {
  
  this.mx_resources_ResourceManagerImpl_localeMap = {};
  this.mx_resources_ResourceManagerImpl_resourceModules = {};
  mx.resources.ResourceManagerImpl.base(this, 'constructor');
  if (mx.managers.SystemManagerGlobals.topLevelSystemManagers.length) {
    if (mx.managers.SystemManagerGlobals.topLevelSystemManagers[0].currentFrame == 1) {
      this.mx_resources_ResourceManagerImpl_ignoreMissingBundles = true;
      this.mx_resources_ResourceManagerImpl_inFrame1 = true;
    }
  }
  var /** @type {Object} */ info = mx.managers.SystemManagerGlobals.info;
  if (!this.mx_resources_ResourceManagerImpl_inFrame1)
    this.mx_resources_ResourceManagerImpl_ignoreMissingBundles = !!(info && info.hasOwnProperty("isMXMLC"));
  if (info)
    this.mx_resources_ResourceManagerImpl_processInfo(info, false);
  this.mx_resources_ResourceManagerImpl_ignoreMissingBundles = !!(info && info.hasOwnProperty("isMXMLC"));
};
goog.inherits(mx.resources.ResourceManagerImpl, org.apache.royale.events.EventDispatcher);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.resources.ResourceManagerImpl', mx.resources.ResourceManagerImpl);


/**
 * @private
 * @type {mx.resources.IResourceManager}
 */
mx.resources.ResourceManagerImpl.instance;


/**
 *  Gets the single instance of the ResourceManagerImpl class.
 *  This object manages all localized resources for a Flex application.
 *  
 *  @asreturn An object implementing IResourceManager.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @return {mx.resources.IResourceManager}
 */
mx.resources.ResourceManagerImpl.getInstance = function() {
  if (!mx.resources.ResourceManagerImpl.instance)
    mx.resources.ResourceManagerImpl.instance = new mx.resources.ResourceManagerImpl();
  return mx.resources.ResourceManagerImpl.instance;
};


/**
 * @private
 * @type {boolean}
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl_inFrame1 = false;


/**
 * @private
 * @type {boolean}
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl_ignoreMissingBundles = false;


/**
 * @private
 * @type {Object}
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl_localeMap;


/**
 * @private
 * @type {Object}
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl_resourceModules;


/**
 * @private
 * @type {boolean}
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl_initializedForNonFrameworkApp = false;


/**
 * @private
 * @type {Array}
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl__localeChain;


/**
 *  @asprivate
 *  This method is called by the SystemManager class of an Application
 *  when the application starts.
 *  It is also called by the FlexModuleFactory class of a code module
 *  when that module gets loaded.
 *
 *  The MXML compiler autogenerated code which set the
 *  "compiledLocales" and "compiledResourceBundleNames" properties
 *  of the info() Object required by the IFlexModuleFactory
 *  interface that these classes implement.
 *  These two properties together indicate which resource bundle
 *  classes the MXML compiler autogenerated and linked into the
 *  application or module.
 *
 *  The "compiledLocales" property has been set to the locales
 *  which were specified at compile time using the -locale option.
 *  For example, if you compile with -locale=en_US,ja_JP
 *  then the "compiledLocales" property is the array [ "en_US", "ja_JP" ].
 *
 *  The "compiledResourceBundleNames" property has been set
 *  to the names of the resource bundles which are used by
 *  the application or module, as determined by the compiler
 *  from [ResourceBundle] metadata and ~~Resource() directives.
 *  For example, if the classes in the application or module
 *  declare that they use resource bundles named "core" and "MyApp",
 *  then the "compiledResourceBundleNames" property is the array
 *  [ "core", "MyApp" ].
 *
 *  The compiler autogenerated a ResourceBundle subclass for each
 *  (locale, bundle name) pair.
 *  For example, with the above locales and bundle names,
 *  there would be four classes:
 *    en_US$core_properties
 *    en_US$MyApp_properties
 *    ja_JP$core_properties
 *    ja_JP$MyApp_properties
 *
 *  This method creates one instance of each such class
 *  and installs it into the ResourceManager with addResourceBundle().
 *  If a bundle for a given locale and bundle name already exists
 *  in the ResourceManager already exists, it does not get replaced.
 *  This can happen when a code module gets loaded into an application.
 * 
 *  When sub-applications and modules install their resource bundles 
 *  they set useWeakReference = true. Any new resource bundles they 
 *  create will be weak referenced by the ResourceManager. The 
 *  sub-application or module will then provide a hard reference
 *  to the returned Array of resource bundles to keep them from 
 *  being garbage collected.
 * @export
 * @param {Array} locales
 * @param {Array} bundleNames
 * @param {boolean=} useWeakReference
 * @return {Array}
 */
mx.resources.ResourceManagerImpl.prototype.installCompiledResourceBundles = function(locales, bundleNames, useWeakReference) {
  useWeakReference = typeof useWeakReference !== 'undefined' ? useWeakReference : false;
  var /** @type {Array} */ bundles = [];
  var /** @type {number} */ bundleCount = 0;
  var /** @type {number} */ n = (locales ? locales.length : 0) >> 0;
  var /** @type {number} */ m = (bundleNames ? bundleNames.length : 0) >> 0;
  for (var /** @type {number} */ i = 0; i < n; i++) {
    var /** @type {string} */ locale = org.apache.royale.utils.Language.string(locales[i]);
    for (var /** @type {number} */ j = 0; j < m; j++) {
      var /** @type {string} */ bundleName = org.apache.royale.utils.Language.string(bundleNames[j]);
      var /** @type {mx.resources.IResourceBundle} */ bundle = this.mx_resources_ResourceManagerImpl_installCompiledResourceBundle(locale, bundleName, useWeakReference);
      if (bundle)
        bundles[bundleCount++] = bundle;
    }
  }
  return bundles;
};


/**
 *  @asprivate
 *  @royaleignorecoercion Class
 * @private
 * @param {string} locale
 * @param {string} bundleName
 * @param {boolean=} useWeakReference
 * @return {mx.resources.IResourceBundle}
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl_installCompiledResourceBundle = function(locale, bundleName, useWeakReference) {
  useWeakReference = typeof useWeakReference !== 'undefined' ? useWeakReference : false;
  var /** @type {string} */ packageName = null;
  var /** @type {string} */ localName = bundleName;
  var /** @type {number} */ colonIndex = (bundleName.indexOf(":")) >> 0;
  if (colonIndex != -1) {
    packageName = bundleName.substring(0, colonIndex);
    localName = bundleName.substring(colonIndex + 1);
  }
  var /** @type {mx.resources.IResourceBundle} */ resourceBundle = this.mx_resources_ResourceManagerImpl_getResourceBundleInternal(locale, bundleName, useWeakReference);
  if (resourceBundle)
    return resourceBundle;
  var /** @type {string} */ resourceBundleClassName = locale + "$" + localName + "_properties";
  if (packageName != null)
    resourceBundleClassName = packageName + "." + resourceBundleClassName;
  var /** @type {Object} */ bundleClass = null;
  bundleClass =  /** @type {Object|null} */ (org.apache.royale.reflection.getDefinitionByName(resourceBundleClassName));
  if (!bundleClass) {
    resourceBundleClassName = bundleName;
    bundleClass =  /** @type {Object|null} */ (org.apache.royale.reflection.getDefinitionByName(resourceBundleClassName));
  }
  if (!bundleClass) {
    resourceBundleClassName = bundleName + "_properties";
    bundleClass =  /** @type {Object|null} */ (org.apache.royale.reflection.getDefinitionByName(resourceBundleClassName));
  }
  if (!bundleClass) {
    if (this.mx_resources_ResourceManagerImpl_ignoreMissingBundles)
      return null;
    throw new Error("Could not find compiled resource bundle '" + bundleName + "' for locale '" + locale + "'.");
  }
  var /** @type {mx.resources.ResourceManagerImpl.ResourceBundleProxy} */ proxy = new mx.resources.ResourceManagerImpl.ResourceBundleProxy();
  proxy.bundleClass = bundleClass;
  proxy.useWeakReference = useWeakReference;
  proxy.locale = locale;
  proxy.bundleName = bundleName;
  resourceBundle = proxy;
  this.addResourceBundle(resourceBundle, useWeakReference);
  return resourceBundle;
};


/**
 * @private
 * @param {Object} info
 * @param {boolean} useWeakReference
 * @return {Array}
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl_processInfo = function(info, useWeakReference) {
  var /** @type {Array} */ compiledLocales = info["compiledLocales"];
  mx.resources.ResourceBundle.http_$$www_adobe_com$2006$flex$mx$internal__locale = org.apache.royale.utils.Language.string(compiledLocales != null && compiledLocales.length > 0 ? compiledLocales[0] : "en_US");
  var /** @type {Array} */ compiledResourceBundleNames = info["compiledResourceBundleNames"];
  var /** @type {Array} */ bundles = this.installCompiledResourceBundles(compiledLocales, compiledResourceBundleNames, useWeakReference);
  if (!this.localeChain)
    this.initializeLocaleChain(compiledLocales);
  return bundles;
};


/**
 *  @copy mx.resources.IResourceManager#initializeLocaleChain()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {Array} compiledLocales
 */
mx.resources.ResourceManagerImpl.prototype.initializeLocaleChain = function(compiledLocales) {
  this.localeChain = mx.resources.LocaleSorter.sortLocalesByPreference(compiledLocales, this.mx_resources_ResourceManagerImpl_getSystemPreferredLocales(), null, true);
};


/**
 *  @copy mx.resources.IResourceManager#addResourceBundle()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.resources.IResourceBundle} resourceBundle
 * @param {boolean=} useWeakReference
 */
mx.resources.ResourceManagerImpl.prototype.addResourceBundle = function(resourceBundle, useWeakReference) {
  useWeakReference = typeof useWeakReference !== 'undefined' ? useWeakReference : false;
  var /** @type {string} */ locale = resourceBundle.locale;
  var /** @type {string} */ bundleName = resourceBundle.bundleName;
  if (!this.mx_resources_ResourceManagerImpl_localeMap[locale])
    this.mx_resources_ResourceManagerImpl_localeMap[locale] = {};
  if (useWeakReference) {
  } else {
    this.mx_resources_ResourceManagerImpl_localeMap[locale][bundleName] = resourceBundle;
  }
};


/**
 *  @copy mx.resources.IResourceManager#getResourceBundle()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} locale
 * @param {string} bundleName
 * @return {mx.resources.IResourceBundle}
 */
mx.resources.ResourceManagerImpl.prototype.getResourceBundle = function(locale, bundleName) {
  return this.mx_resources_ResourceManagerImpl_getResourceBundleInternal(locale, bundleName, false);
};


/**
 *  @asprivate
 *  
 *  @asparam ignoreWeakReferenceBundles if true, do not search weak
 *  reference bundles.
 * 
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @private
 * @param {string} locale
 * @param {string} bundleName
 * @param {boolean} ignoreWeakReferenceBundles
 * @return {mx.resources.IResourceBundle}
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl_getResourceBundleInternal = function(locale, bundleName, ignoreWeakReferenceBundles) {
  var /** @type {Object} */ bundleMap = this.mx_resources_ResourceManagerImpl_localeMap[locale];
  if (!bundleMap)
    return null;
  var /** @type {mx.resources.IResourceBundle} */ bundle = null;
  var /** @type {Object} */ bundleObject = bundleMap[bundleName];
  if (org.apache.royale.utils.Language.is(bundleObject, mx.resources.ResourceManagerImpl.ResourceBundleProxy)) {
    bundle = this.mx_resources_ResourceManagerImpl_loadResourceBundleProxy(org.apache.royale.utils.Language.as(bundleObject, mx.resources.ResourceManagerImpl.ResourceBundleProxy, true));
  } else {
    bundle = org.apache.royale.utils.Language.as(bundleObject, mx.resources.IResourceBundle);
  }
  return bundle;
};


/**
 * @private
 * @param {mx.resources.ResourceManagerImpl.ResourceBundleProxy} proxy
 * @return {mx.resources.ResourceBundle}
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl_loadResourceBundleProxy = function(proxy) {
  var /** @type {Object} */ proxyClass = proxy.bundleClass;
  var /** @type {mx.resources.ResourceBundle} */ resourceBundle = org.apache.royale.utils.Language.as(new proxyClass(), mx.resources.ResourceBundle, true);
  resourceBundle.http_$$www_adobe_com$2006$flex$mx$internal___locale = proxy.locale;
  resourceBundle.http_$$www_adobe_com$2006$flex$mx$internal___bundleName = proxy.bundleName;
  this.addResourceBundle(resourceBundle, proxy.useWeakReference);
  return resourceBundle;
};


/**
 *  @copy mx.resources.IResourceManager#removeResourceBundle()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} locale
 * @param {string} bundleName
 */
mx.resources.ResourceManagerImpl.prototype.removeResourceBundle = function(locale, bundleName) {
  delete this.mx_resources_ResourceManagerImpl_localeMap[locale][bundleName];
  if (this.getBundleNamesForLocale(locale).length == 0)
    delete this.mx_resources_ResourceManagerImpl_localeMap[locale];
};


/**
 *  @copy mx.resources.IResourceManager#removeResourceBundlesForLocale()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} locale
 */
mx.resources.ResourceManagerImpl.prototype.removeResourceBundlesForLocale = function(locale) {
  delete this.mx_resources_ResourceManagerImpl_localeMap[locale];
};


/**
 *  @copy mx.resources.IResourceManager#update()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.resources.ResourceManagerImpl.prototype.update = function() {
  this.dispatchEvent(new org.apache.royale.events.Event(org.apache.royale.events.Event.CHANGE));
};


/**
 *  @copy mx.resources.IResourceManager#getLocales()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @return {Array}
 */
mx.resources.ResourceManagerImpl.prototype.getLocales = function() {
  var /** @type {Array} */ locales = [];
  for (var /** @type {string} */ p in this.mx_resources_ResourceManagerImpl_localeMap) {
    locales.push(p);
  }
  return locales;
};


/**
 *  @copy mx.resources.IResourceManager#getPreferredLocaleChain()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @return {Array}
 */
mx.resources.ResourceManagerImpl.prototype.getPreferredLocaleChain = function() {
  return mx.resources.LocaleSorter.sortLocalesByPreference(this.getLocales(), this.mx_resources_ResourceManagerImpl_getSystemPreferredLocales(), null, true);
};


/**
 *  @copy mx.resources.IResourceManager#getBundleNamesForLocale()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} locale
 * @return {Array}
 */
mx.resources.ResourceManagerImpl.prototype.getBundleNamesForLocale = function(locale) {
  var /** @type {Array} */ bundleNames = [];
  for (var /** @type {string} */ p in this.mx_resources_ResourceManagerImpl_localeMap[locale]) {
    bundleNames.push(p);
  }
  return bundleNames;
};


/**
 *  @copy mx.resources.findResourceBundleWithResource
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * 
 *  @royaleignorecoercion mx.resources.IResourceBundle
 * @export
 * @param {string} bundleName
 * @param {string} resourceName
 * @return {Object}
 */
mx.resources.ResourceManagerImpl.prototype.findResourceBundleWithResource = function(bundleName, resourceName) {
  if (!this.mx_resources_ResourceManagerImpl__localeChain)
    return null;
  var /** @type {number} */ n = (this.mx_resources_ResourceManagerImpl__localeChain.length) >> 0;
  for (var /** @type {number} */ i = 0; i < n; i++) {
    var /** @type {string} */ locale = org.apache.royale.utils.Language.string(this.localeChain[i]);
    var /** @type {Object} */ bundleMap = this.mx_resources_ResourceManagerImpl_localeMap[locale];
    if (!bundleMap)
      continue;
    var /** @type {Object} */ bundleObject = bundleMap[bundleName];
    if (!bundleObject)
      continue;
    var /** @type {Object} */ bundle = null;
    if (org.apache.royale.utils.Language.is(bundleObject, mx.resources.ResourceManagerImpl.ResourceBundleProxy)) {
      bundle = this.mx_resources_ResourceManagerImpl_loadResourceBundleProxy(org.apache.royale.utils.Language.as(bundleObject, mx.resources.ResourceManagerImpl.ResourceBundleProxy, true));
    } else {
      bundle = bundleObject;
    }
    if (bundle && resourceName in bundle.content)
      return bundle;
  }
  return null;
};


/**
 *  @copy mx.resources.IResourceManager#getObject()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} bundleName
 * @param {string} resourceName
 * @param {string=} locale
 * @return {*}
 */
mx.resources.ResourceManagerImpl.prototype.getObject = function(bundleName, resourceName, locale) {
  locale = typeof locale !== 'undefined' ? locale : null;
  var /** @type {mx.resources.IResourceBundle} */ resourceBundle = this.mx_resources_ResourceManagerImpl_findBundle(bundleName, resourceName, locale);
  if (!resourceBundle)
    return undefined;
  return resourceBundle.content[resourceName];
};


/**
 *  @copy mx.resources.IResourceManager#getString()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} bundleName
 * @param {string} resourceName
 * @param {Array=} parameters
 * @param {string=} locale
 * @return {string}
 */
mx.resources.ResourceManagerImpl.prototype.getString = function(bundleName, resourceName, parameters, locale) {
  parameters = typeof parameters !== 'undefined' ? parameters : null;
  locale = typeof locale !== 'undefined' ? locale : null;
  var /** @type {mx.resources.IResourceBundle} */ resourceBundle = this.mx_resources_ResourceManagerImpl_findBundle(bundleName, resourceName, locale);
  if (!resourceBundle)
    return null;
  if (!(resourceName in resourceBundle.content))
    return null;
  var /** @type {string} */ value = String(resourceBundle.content[resourceName]);
  if (parameters)
    value = mx.utils.StringUtil.substitute(value, parameters);
  return value;
};


/**
 *  @copy mx.resources.IResourceManager#getStringArray()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} bundleName
 * @param {string} resourceName
 * @param {string=} locale
 * @return {Array}
 */
mx.resources.ResourceManagerImpl.prototype.getStringArray = function(bundleName, resourceName, locale) {
  locale = typeof locale !== 'undefined' ? locale : null;
  var /** @type {mx.resources.IResourceBundle} */ resourceBundle = this.mx_resources_ResourceManagerImpl_findBundle(bundleName, resourceName, locale);
  if (!resourceBundle)
    return null;
  var /** @type {*} */ value = resourceBundle.content[resourceName];
  var /** @type {Array} */ array = String(value).split(",");
  var /** @type {number} */ n = (array.length) >> 0;
  for (var /** @type {number} */ i = 0; i < n; i++) {
    array[i] = mx.utils.StringUtil.trim(org.apache.royale.utils.Language.string(array[i]));
  }
  return array;
};


/**
 *  @copy mx.resources.IResourceManager#getNumber()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} bundleName
 * @param {string} resourceName
 * @param {string=} locale
 * @return {number}
 */
mx.resources.ResourceManagerImpl.prototype.getNumber = function(bundleName, resourceName, locale) {
  locale = typeof locale !== 'undefined' ? locale : null;
  var /** @type {mx.resources.IResourceBundle} */ resourceBundle = this.mx_resources_ResourceManagerImpl_findBundle(bundleName, resourceName, locale);
  if (!resourceBundle)
    return NaN;
  var /** @type {*} */ value = resourceBundle.content[resourceName];
  return Number(value);
};


/**
 *  @copy mx.resources.IResourceManager#getInt()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} bundleName
 * @param {string} resourceName
 * @param {string=} locale
 * @return {number}
 */
mx.resources.ResourceManagerImpl.prototype.getInt = function(bundleName, resourceName, locale) {
  locale = typeof locale !== 'undefined' ? locale : null;
  var /** @type {mx.resources.IResourceBundle} */ resourceBundle = this.mx_resources_ResourceManagerImpl_findBundle(bundleName, resourceName, locale);
  if (!resourceBundle)
    return 0;
  var /** @type {*} */ value = resourceBundle.content[resourceName];
  return org.apache.royale.utils.Language._int(value);
};


/**
 *  @copy mx.resources.IResourceManager#getUint()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} bundleName
 * @param {string} resourceName
 * @param {string=} locale
 * @return {number}
 */
mx.resources.ResourceManagerImpl.prototype.getUint = function(bundleName, resourceName, locale) {
  locale = typeof locale !== 'undefined' ? locale : null;
  var /** @type {mx.resources.IResourceBundle} */ resourceBundle = this.mx_resources_ResourceManagerImpl_findBundle(bundleName, resourceName, locale);
  if (!resourceBundle)
    return 0;
  var /** @type {*} */ value = resourceBundle.content[resourceName];
  return org.apache.royale.utils.Language.uint(value);
};


/**
 *  @copy mx.resources.IResourceManager#getBoolean()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} bundleName
 * @param {string} resourceName
 * @param {string=} locale
 * @return {boolean}
 */
mx.resources.ResourceManagerImpl.prototype.getBoolean = function(bundleName, resourceName, locale) {
  locale = typeof locale !== 'undefined' ? locale : null;
  var /** @type {mx.resources.IResourceBundle} */ resourceBundle = this.mx_resources_ResourceManagerImpl_findBundle(bundleName, resourceName, locale);
  if (!resourceBundle)
    return false;
  var /** @type {*} */ value = resourceBundle.content[resourceName];
  return String(value).toLowerCase() == "true";
};


/**
 *  @copy mx.resources.IResourceManager#getClass()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} bundleName
 * @param {string} resourceName
 * @param {string=} locale
 * @return {Object}
 */
mx.resources.ResourceManagerImpl.prototype.getClass = function(bundleName, resourceName, locale) {
  locale = typeof locale !== 'undefined' ? locale : null;
  var /** @type {mx.resources.IResourceBundle} */ resourceBundle = this.mx_resources_ResourceManagerImpl_findBundle(bundleName, resourceName, locale);
  if (!resourceBundle)
    return null;
  var /** @type {*} */ value = resourceBundle.content[resourceName];
  return org.apache.royale.utils.Language.as(value, org.apache.royale.utils.Language.synthType('Class'));
};


/**
 *  @asprivate.
 * @private
 * @param {string} bundleName
 * @param {string} resourceName
 * @param {string} locale
 * @return {mx.resources.IResourceBundle}
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl_findBundle = function(bundleName, resourceName, locale) {
  return locale != null ? this.getResourceBundle(locale, bundleName) : this.findResourceBundleWithResource(bundleName, resourceName);
};


/**
 *  @asprivate
 * @private
 * @return {Array}
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl_getSystemPreferredLocales = function() {
  var /** @type {Array} */ systemPreferences;
  systemPreferences = [org.apache.royale.utils.LocaleUtils.getLocale()];
  return systemPreferences;
};


/**
 *  @asprivate.
 * @private
 * @param {*} resourceModule
 */
mx.resources.ResourceManagerImpl.prototype.mx_resources_ResourceManagerImpl_dumpResourceModule = function(resourceModule) {
  var foreachiter0_target = resourceModule.resourceBundles;
  for (var foreachiter0 in foreachiter0_target) 
  {
  var bundle = foreachiter0_target[foreachiter0];
  {
    org.apache.royale.utils.Language.trace(bundle.locale, bundle.bundleName);
    for (var /** @type {string} */ p in bundle.content) {
    }
  }}
  
};


mx.resources.ResourceManagerImpl.prototype.get__localeChain = function() {
  return this.mx_resources_ResourceManagerImpl__localeChain;
};


mx.resources.ResourceManagerImpl.prototype.set__localeChain = function(value) {
  this.mx_resources_ResourceManagerImpl__localeChain = value;
  this.update();
};


Object.defineProperties(mx.resources.ResourceManagerImpl.prototype, /** @lends {mx.resources.ResourceManagerImpl.prototype} */ {
/**
  * @export
  * @type {Array} */
localeChain: {
get: mx.resources.ResourceManagerImpl.prototype.get__localeChain,
set: mx.resources.ResourceManagerImpl.prototype.set__localeChain}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.resources.ResourceManagerImpl.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ResourceManagerImpl', qName: 'mx.resources.ResourceManagerImpl', kind: 'class' }], interfaces: [mx.resources.IResourceManager] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.resources.ResourceManagerImpl.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'localeChain': { type: 'Array', access: 'readwrite', declaredBy: 'mx.resources.ResourceManagerImpl'}
      };
    },
    methods: function () {
      return {
        '|getInstance': { type: 'mx.resources.IResourceManager', declaredBy: 'mx.resources.ResourceManagerImpl'},
        'ResourceManagerImpl': { type: '', declaredBy: 'mx.resources.ResourceManagerImpl'},
        'installCompiledResourceBundles': { type: 'Array', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'Array', false ,'Array', false ,'Boolean', true ]; }},
        'initializeLocaleChain': { type: 'void', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'Array', false ]; }},
        'addResourceBundle': { type: 'void', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'mx.resources.IResourceBundle', false ,'Boolean', true ]; }},
        'getResourceBundle': { type: 'mx.resources.IResourceBundle', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ,'String', false ]; }},
        'removeResourceBundle': { type: 'void', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ,'String', false ]; }},
        'removeResourceBundlesForLocale': { type: 'void', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ]; }},
        'update': { type: 'void', declaredBy: 'mx.resources.ResourceManagerImpl'},
        'getLocales': { type: 'Array', declaredBy: 'mx.resources.ResourceManagerImpl'},
        'getPreferredLocaleChain': { type: 'Array', declaredBy: 'mx.resources.ResourceManagerImpl'},
        'getBundleNamesForLocale': { type: 'Array', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ]; }},
        'findResourceBundleWithResource': { type: 'mx.resources.IResourceBundle', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ,'String', false ]; }},
        'getObject': { type: '*', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ,'String', false ,'String', true ]; }, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'change' } ] } ]; }},
        'getString': { type: 'String', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ,'String', false ,'Array', true ,'String', true ]; }, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'change' } ] } ]; }},
        'getStringArray': { type: 'Array', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ,'String', false ,'String', true ]; }, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'change' } ] } ]; }},
        'getNumber': { type: 'Number', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ,'String', false ,'String', true ]; }, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'change' } ] } ]; }},
        'getInt': { type: 'int', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ,'String', false ,'String', true ]; }, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'change' } ] } ]; }},
        'getUint': { type: 'uint', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ,'String', false ,'String', true ]; }, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'change' } ] } ]; }},
        'getBoolean': { type: 'Boolean', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ,'String', false ,'String', true ]; }, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'change' } ] } ]; }},
        'getClass': { type: 'Class', declaredBy: 'mx.resources.ResourceManagerImpl', parameters: function () { return [ 'String', false ,'String', false ,'String', true ]; }, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'change' } ] } ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.resources.ResourceManagerImpl.prototype.ROYALE_COMPILE_FLAGS = 26;



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @param {mx.modules.IModuleInfo} moduleInfo
 * @param {Function} readyHandler
 * @param {Function} errorHandler
 */
mx.resources.ResourceManagerImpl.ResourceModuleInfo = function(moduleInfo, readyHandler, errorHandler) {
  ;
  this.moduleInfo = moduleInfo;
  this.readyHandler = readyHandler;
  this.errorHandler = errorHandler;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.resources.ResourceManagerImpl.ResourceModuleInfo', mx.resources.ResourceManagerImpl.ResourceModuleInfo);


/**
 * @export
 * @type {Function}
 */
mx.resources.ResourceManagerImpl.ResourceModuleInfo.prototype.errorHandler;


/**
 * @export
 * @type {mx.modules.IModuleInfo}
 */
mx.resources.ResourceManagerImpl.ResourceModuleInfo.prototype.moduleInfo;


/**
 * @export
 * @type {Function}
 */
mx.resources.ResourceManagerImpl.ResourceModuleInfo.prototype.readyHandler;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.resources.ResourceManagerImpl.ResourceModuleInfo.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ResourceModuleInfo', qName: 'mx.resources.ResourceManagerImpl.ResourceModuleInfo', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.resources.ResourceManagerImpl.ResourceModuleInfo.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'errorHandler': { type: 'Function', get_set: function (/** mx.resources.ResourceManagerImpl.ResourceModuleInfo */ inst, /** * */ v) {return v !== undefined ? inst.errorHandler = v : inst.errorHandler;}},
        'moduleInfo': { type: 'mx.modules.IModuleInfo', get_set: function (/** mx.resources.ResourceManagerImpl.ResourceModuleInfo */ inst, /** * */ v) {return v !== undefined ? inst.moduleInfo = v : inst.moduleInfo;}},
        'readyHandler': { type: 'Function', get_set: function (/** mx.resources.ResourceManagerImpl.ResourceModuleInfo */ inst, /** * */ v) {return v !== undefined ? inst.readyHandler = v : inst.readyHandler;}}
      };
    },
    methods: function () {
      return {
        'ResourceModuleInfo': { type: '', declaredBy: 'mx.resources.ResourceManagerImpl.ResourceModuleInfo', parameters: function () { return [ 'mx.modules.IModuleInfo', false ,'Function', false ,'Function', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.resources.ResourceManagerImpl.ResourceModuleInfo.prototype.ROYALE_COMPILE_FLAGS = 26;



/**
 * @constructor
 * @extends {org.apache.royale.events.EventDispatcher}
 */
mx.resources.ResourceManagerImpl.ResourceEventDispatcher = function() {
  mx.resources.ResourceManagerImpl.ResourceEventDispatcher.base(this, 'constructor');
};
goog.inherits(mx.resources.ResourceManagerImpl.ResourceEventDispatcher, org.apache.royale.events.EventDispatcher);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.resources.ResourceManagerImpl.ResourceEventDispatcher', mx.resources.ResourceManagerImpl.ResourceEventDispatcher);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.resources.ResourceManagerImpl.ResourceEventDispatcher.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ResourceEventDispatcher', qName: 'mx.resources.ResourceManagerImpl.ResourceEventDispatcher', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.resources.ResourceManagerImpl.ResourceEventDispatcher.prototype.ROYALE_REFLECTION_INFO = function () {
  return {};
};
/**
 * @const
 * @type {number}
 */
mx.resources.ResourceManagerImpl.ResourceEventDispatcher.prototype.ROYALE_COMPILE_FLAGS = 26;



/**
 * @constructor
 * @implements {mx.resources.IResourceBundle}
 */
mx.resources.ResourceManagerImpl.ResourceBundleProxy = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.resources.ResourceManagerImpl.ResourceBundleProxy', mx.resources.ResourceManagerImpl.ResourceBundleProxy);


/**
 * @export
 * @type {Object}
 */
mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.bundleClass;


/**
 * @export
 * @type {boolean}
 */
mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.useWeakReference;


/**
 * @private
 * @type {string}
 */
mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.ResourceBundleProxy__bundleName;


/**
 * @private
 * @type {string}
 */
mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.ResourceBundleProxy__locale;


mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.get__bundleName = function() {
  return this.ResourceBundleProxy__bundleName;
};


mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.set__bundleName = function(value) {
  this.ResourceBundleProxy__bundleName = value;
};


mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.get__content = function() {
  return null;
};


mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.get__locale = function() {
  return this.ResourceBundleProxy__locale;
};


mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.set__locale = function(value) {
  this.ResourceBundleProxy__locale = value;
};


Object.defineProperties(mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype, /** @lends {mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype} */ {
/**
  * @export
  * @type {string} */
bundleName: {
get: mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.get__bundleName,
set: mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.set__bundleName},
/**
  * @export
  * @type {Object} */
content: {
get: mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.get__content},
/**
  * @export
  * @type {string} */
locale: {
get: mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.get__locale,
set: mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.set__locale}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ResourceBundleProxy', qName: 'mx.resources.ResourceManagerImpl.ResourceBundleProxy', kind: 'class' }], interfaces: [mx.resources.IResourceBundle] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'bundleClass': { type: 'Class', get_set: function (/** mx.resources.ResourceManagerImpl.ResourceBundleProxy */ inst, /** * */ v) {return v !== undefined ? inst.bundleClass = v : inst.bundleClass;}},
        'useWeakReference': { type: 'Boolean', get_set: function (/** mx.resources.ResourceManagerImpl.ResourceBundleProxy */ inst, /** * */ v) {return v !== undefined ? inst.useWeakReference = v : inst.useWeakReference;}}
      };
    },
    accessors: function () {
      return {
        'bundleName': { type: 'String', access: 'readwrite', declaredBy: 'mx.resources.ResourceManagerImpl.ResourceBundleProxy'},
        'content': { type: 'Object', access: 'readonly', declaredBy: 'mx.resources.ResourceManagerImpl.ResourceBundleProxy'},
        'locale': { type: 'String', access: 'readwrite', declaredBy: 'mx.resources.ResourceManagerImpl.ResourceBundleProxy'}
      };
    },
    methods: function () {
      return {
        'ResourceBundleProxy': { type: '', declaredBy: 'mx.resources.ResourceManagerImpl.ResourceBundleProxy'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.resources.ResourceManagerImpl.ResourceBundleProxy.prototype.ROYALE_COMPILE_FLAGS = 26;
