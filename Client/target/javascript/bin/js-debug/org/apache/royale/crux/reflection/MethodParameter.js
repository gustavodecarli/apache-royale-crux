/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/reflection/MethodParameter.as
 * org.apache.royale.crux.reflection.MethodParameter
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.reflection.MethodParameter');
/* Royale Dependency List: */



/**
 * Constructor sets initial values of required parameters.
 *
 * @asparam index
 * @asparam type
 * @asparam optional
 * @constructor
 * @param {number} index
 * @param {Object} type
 * @param {boolean} optional
 */
org.apache.royale.crux.reflection.MethodParameter = function(index, type, optional) {
  this.index = index;
  this.type = type;
  this.optional = optional;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.reflection.MethodParameter', org.apache.royale.crux.reflection.MethodParameter);


/**
 * @export
 * @type {number}
 */
org.apache.royale.crux.reflection.MethodParameter.prototype.index = 0;


/**
 * @export
 * @type {Object}
 */
org.apache.royale.crux.reflection.MethodParameter.prototype.type;


/**
 * @export
 * @type {boolean}
 */
org.apache.royale.crux.reflection.MethodParameter.prototype.optional;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.reflection.MethodParameter.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MethodParameter', qName: 'org.apache.royale.crux.reflection.MethodParameter', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.reflection.MethodParameter.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'index': { type: 'int', get_set: function (/** org.apache.royale.crux.reflection.MethodParameter */ inst, /** * */ v) {return v !== undefined ? inst.index = v : inst.index;}},
        'type': { type: 'Class', get_set: function (/** org.apache.royale.crux.reflection.MethodParameter */ inst, /** * */ v) {return v !== undefined ? inst.type = v : inst.type;}},
        'optional': { type: 'Boolean', get_set: function (/** org.apache.royale.crux.reflection.MethodParameter */ inst, /** * */ v) {return v !== undefined ? inst.optional = v : inst.optional;}}
      };
    },
    methods: function () {
      return {
        'MethodParameter': { type: '', declaredBy: 'org.apache.royale.crux.reflection.MethodParameter', parameters: function () { return [ 'int', false ,'Class', false ,'Boolean', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.reflection.MethodParameter.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./MethodParameter.js.map
