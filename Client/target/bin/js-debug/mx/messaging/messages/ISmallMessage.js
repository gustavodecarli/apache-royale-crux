/**
 * Generated by Apache Royale Compiler from mx/messaging/messages/ISmallMessage.as
 * mx.messaging.messages.ISmallMessage
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.messaging.messages.ISmallMessage');
/* Royale Dependency List: XML*/

goog.require('mx.messaging.messages.IMessage');



/**
 * @interface
 * @extends {mx.messaging.messages.IMessage}
 */
mx.messaging.messages.ISmallMessage = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.messaging.messages.ISmallMessage', mx.messaging.messages.ISmallMessage);
/**
 * This method must be implemented by subclasses that have a "small" form,
 * typically achieved through the use of
 * <code>flash.utils.IExternalizable</code>. If a small form is not
 * available this method should return null.
 *
 * @asreturn Returns An alternative representation of an
 * flex.messaging.messages.IMessage so that the serialized form
 * is smaller than the regular message.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion BlazeDS 4
 *  @productversion LCDS 3 
 * @export
 * @return {mx.messaging.messages.IMessage}
 */
mx.messaging.messages.ISmallMessage.prototype.getSmallMessage = function() {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.messaging.messages.ISmallMessage.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ISmallMessage', qName: 'mx.messaging.messages.ISmallMessage', kind: 'interface' }], interfaces: [mx.messaging.messages.IMessage] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.messaging.messages.ISmallMessage.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'getSmallMessage': { type: 'mx.messaging.messages.IMessage', declaredBy: 'mx.messaging.messages.ISmallMessage'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.messaging.messages.ISmallMessage.prototype.ROYALE_COMPILE_FLAGS = 26;
