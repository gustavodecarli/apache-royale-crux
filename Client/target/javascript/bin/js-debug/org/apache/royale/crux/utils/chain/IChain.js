/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/utils/chain/IChain.as
 * org.apache.royale.crux.utils.chain.IChain
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.utils.chain.IChain');
/* Royale Dependency List: org.apache.royale.crux.utils.chain.IChainStep*/

goog.require('org.apache.royale.events.IEventDispatcher');



/**
 * @interface
 * @extends {org.apache.royale.events.IEventDispatcher}
 */
org.apache.royale.crux.utils.chain.IChain = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.utils.chain.IChain', org.apache.royale.crux.utils.chain.IChain);
/**  * @type {number}
 */org.apache.royale.crux.utils.chain.IChain.prototype.position;
/**  * @type {boolean}
 */org.apache.royale.crux.utils.chain.IChain.prototype.isComplete;
/**  * @type {boolean}
 */org.apache.royale.crux.utils.chain.IChain.prototype.stopOnError;
/**
 * @export
 * @return {boolean}
 */
org.apache.royale.crux.utils.chain.IChain.prototype.hasNext = function() {
};
org.apache.royale.crux.utils.chain.IChain.prototype.stepComplete = function() {
};
org.apache.royale.crux.utils.chain.IChain.prototype.stepError = function() {
};
/**
 * @export
 * @param {org.apache.royale.crux.utils.chain.IChainStep} step
 * @return {org.apache.royale.crux.utils.chain.IChain}
 */
org.apache.royale.crux.utils.chain.IChain.prototype.addStep = function(step) {
};
org.apache.royale.crux.utils.chain.IChain.prototype.start = function() {
};
org.apache.royale.crux.utils.chain.IChain.prototype.doProceed = function() {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.utils.chain.IChain.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IChain', qName: 'org.apache.royale.crux.utils.chain.IChain', kind: 'interface' }], interfaces: [org.apache.royale.events.IEventDispatcher] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.utils.chain.IChain.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'position': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.crux.utils.chain.IChain'},
        'isComplete': { type: 'Boolean', access: 'readonly', declaredBy: 'org.apache.royale.crux.utils.chain.IChain'},
        'stopOnError': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.crux.utils.chain.IChain'}
      };
    },
    methods: function () {
      return {
        'hasNext': { type: 'Boolean', declaredBy: 'org.apache.royale.crux.utils.chain.IChain'},
        'stepComplete': { type: 'void', declaredBy: 'org.apache.royale.crux.utils.chain.IChain'},
        'stepError': { type: 'void', declaredBy: 'org.apache.royale.crux.utils.chain.IChain'},
        'addStep': { type: 'org.apache.royale.crux.utils.chain.IChain', declaredBy: 'org.apache.royale.crux.utils.chain.IChain', parameters: function () { return [ 'org.apache.royale.crux.utils.chain.IChainStep', false ]; }},
        'start': { type: 'void', declaredBy: 'org.apache.royale.crux.utils.chain.IChain'},
        'doProceed': { type: 'void', declaredBy: 'org.apache.royale.crux.utils.chain.IChain'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.utils.chain.IChain.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./IChain.js.map
