/**
 * Generated by Apache Royale Compiler from crux/quickstart/model/User.as
 * crux.quickstart.model.User
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('crux.quickstart.model.User');
/* Royale Dependency List: org.apache.royale.events.ValueChangeEvent*/

goog.require('org.apache.royale.events.EventDispatcher');



/**
 * @constructor
 * @extends {org.apache.royale.events.EventDispatcher}
 */
crux.quickstart.model.User = function() {// Compiler generated Binding support implementation:
crux.quickstart.model.User.base(this, 'constructor');

};
// Compiler generated Binding support implementation:
goog.inherits(crux.quickstart.model.User, org.apache.royale.events.EventDispatcher);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('crux.quickstart.model.User', crux.quickstart.model.User);


/**
 * @export
 * @type {number}
 */
crux.quickstart.model.User.prototype.id_ = 0;


/**
 * @export
 * @type {string}
 */
crux.quickstart.model.User.prototype.firstName_ = null;


/**
 * @export
 * @type {string}
 */
crux.quickstart.model.User.prototype.lastName_ = null;


/**
 * @export
 * @type {string}
 */
crux.quickstart.model.User.prototype.email_ = null;


/**
 * @export
 * @return {crux.quickstart.model.User}
 */
crux.quickstart.model.User.prototype.clone = function() {
var /** @type {crux.quickstart.model.User} */ usr = new crux.quickstart.model.User();
usr.id = this.id;
usr.firstName = this.firstName;
usr.lastName = this.lastName;
usr.email = this.email;
return usr;
};Object.defineProperties(crux.quickstart.model.User.prototype, /** @lends {crux.quickstart.model.User.prototype} */ {
/** @export
  * @type {string} */
email: {
/** @this {crux.quickstart.model.User} */
get: function() {
return this.email_;
},

/** @this {crux.quickstart.model.User} */
set: function(value) {
if (value != this.email_) {
    var oldValue = this.email_;
    this.email_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "email", oldValue, value));
}
}},/** @export
  * @type {string} */
firstName: {
/** @this {crux.quickstart.model.User} */
get: function() {
return this.firstName_;
},

/** @this {crux.quickstart.model.User} */
set: function(value) {
if (value != this.firstName_) {
    var oldValue = this.firstName_;
    this.firstName_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "firstName", oldValue, value));
}
}},/** @export
  * @type {number} */
id: {
/** @this {crux.quickstart.model.User} */
get: function() {
return this.id_;
},

/** @this {crux.quickstart.model.User} */
set: function(value) {
if (value != this.id_) {
    var oldValue = this.id_;
    this.id_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "id", oldValue, value));
}
}},/** @export
  * @type {string} */
lastName: {
/** @this {crux.quickstart.model.User} */
get: function() {
return this.lastName_;
},

/** @this {crux.quickstart.model.User} */
set: function(value) {
if (value != this.lastName_) {
    var oldValue = this.lastName_;
    this.lastName_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "lastName", oldValue, value));
}
}}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
crux.quickstart.model.User.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'User', qName: 'crux.quickstart.model.User', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
crux.quickstart.model.User.prototype.ROYALE_REFLECTION_INFO = function () {
return {
  accessors: function () {
    return {
      'id': { type: 'int', access: 'readwrite', declaredBy: 'crux.quickstart.model.User'},
      'firstName': { type: 'String', access: 'readwrite', declaredBy: 'crux.quickstart.model.User'},
      'lastName': { type: 'String', access: 'readwrite', declaredBy: 'crux.quickstart.model.User'},
      'email': { type: 'String', access: 'readwrite', declaredBy: 'crux.quickstart.model.User'}
    };
  },
  methods: function () {
    return {
      'clone': { type: 'crux.quickstart.model.User', declaredBy: 'crux.quickstart.model.User'}
    };
  },
  metadata: function () { return [ { name: 'Bindable' } ]; }
};
};
/**
 * @const
 * @type {number}
 */
crux.quickstart.model.User.prototype.ROYALE_COMPILE_FLAGS = 15;

//# sourceMappingURL=./User.js.map
