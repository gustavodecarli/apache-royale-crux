/**
 * Generated by Apache Royale Compiler from org/apache/royale/reflection/nativejs/AS3Vector.as
 * org.apache.royale.reflection.nativejs.AS3Vector
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.reflection.nativejs.AS3Vector');
/* Royale Dependency List: org.apache.royale.utils.Language*/




/**
 * Provides data for a stand-in TypeDefinition of the native as3 type for javascript
 * @export
 * @param {string=} typeName
 * @return {Object}
 */
org.apache.royale.reflection.nativejs.AS3Vector = function(typeName) {
  typeName = typeof typeName !== 'undefined' ? typeName : 'Vector.<*>';
  var /** @type {Object} */ ret = {};
  ret['classRef'] = org.apache.royale.utils.Language.synthVector(typeName.substring(8, typeName.length - 1));
  ret['name'] = typeName;
  ret['SYNTHETIC_TYPE'] = true;
  ret['ROYALE_CLASS_INFO'] = {names:[{name:typeName, qName:typeName, kind:'class'}]};
  ret['ROYALE_REFLECTION_INFO'] = function() {
    return {'accessors':function() {
      return {'length':{'access':'readwrite', 'type':'uint', 'declaredBy':typeName}, 'fixed':{'access':'readwrite', 'type':'Boolean', 'declaredBy':typeName}};
    }, 'methods':function() {
      var /** @type {Object} */ ret = {};
      ret[typeName] = {'parameters':function() {
        return ['uint', true, 'Boolean', true];
      }, 'type':'', 'declaredBy':typeName};
      return ret;
    }};
  };
  if (typeName == 'Vector.<*>') {
    ret['variant'] = function(subType) {
      return org.apache.royale.reflection.nativejs.AS3Vector(subType);
    };
  }
  return ret;
}
