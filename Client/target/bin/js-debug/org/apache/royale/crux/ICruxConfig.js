/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/ICruxConfig.as
 * org.apache.royale.crux.ICruxConfig
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.ICruxConfig');
/* Royale Dependency List: */



/**
 * @interface
 */
org.apache.royale.crux.ICruxConfig = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.ICruxConfig', org.apache.royale.crux.ICruxConfig);
/**  * @type {boolean}
 */org.apache.royale.crux.ICruxConfig.prototype.strict;
/**  * @type {string}
 */org.apache.royale.crux.ICruxConfig.prototype.setUpEventType;
/**  * @type {number}
 */org.apache.royale.crux.ICruxConfig.prototype.setUpEventPriority;
/**  * @type {number}
 */org.apache.royale.crux.ICruxConfig.prototype.setUpEventPhase;
/**  * @type {string}
 */org.apache.royale.crux.ICruxConfig.prototype.tearDownEventType;
/**  * @type {number}
 */org.apache.royale.crux.ICruxConfig.prototype.tearDownEventPriority;
/**  * @type {number}
 */org.apache.royale.crux.ICruxConfig.prototype.tearDownEventPhase;
/**  * @type {Array}
 */org.apache.royale.crux.ICruxConfig.prototype.eventPackages;
/**  * @type {Array}
 */org.apache.royale.crux.ICruxConfig.prototype.viewPackages;
/**  * @type {Function}
 */org.apache.royale.crux.ICruxConfig.prototype.defaultFaultHandler;
/**  * @type {string}
 */org.apache.royale.crux.ICruxConfig.prototype.defaultDispatcher;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.ICruxConfig.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ICruxConfig', qName: 'org.apache.royale.crux.ICruxConfig', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.ICruxConfig.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strict': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICruxConfig'},
        'setUpEventType': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICruxConfig'},
        'setUpEventPriority': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICruxConfig'},
        'setUpEventPhase': { type: 'uint', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICruxConfig'},
        'tearDownEventType': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICruxConfig'},
        'tearDownEventPriority': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICruxConfig'},
        'tearDownEventPhase': { type: 'uint', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICruxConfig'},
        'eventPackages': { type: '*', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICruxConfig'},
        'viewPackages': { type: '*', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICruxConfig'},
        'defaultFaultHandler': { type: 'Function', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICruxConfig'},
        'defaultDispatcher': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.crux.ICruxConfig'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.ICruxConfig.prototype.ROYALE_COMPILE_FLAGS = 10;
