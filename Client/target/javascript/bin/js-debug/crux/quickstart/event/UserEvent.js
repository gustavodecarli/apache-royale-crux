/**
 * Generated by Apache Royale Compiler from crux/quickstart/event/UserEvent.as
 * crux.quickstart.event.UserEvent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('crux.quickstart.event.UserEvent');
/* Royale Dependency List: crux.quickstart.model.User*/

goog.require('org.apache.royale.events.Event');



/**
 * This is just a normal Royale event which will be dispatched from a view instance.
 * The only thing to note is that we set 'bubbles' to true, so that the event will bubble
 * up the 'display' list, allowing Crux to listen for your events.
 * @constructor
 * @extends {org.apache.royale.events.Event}
 * @param {string} type
 */
crux.quickstart.event.UserEvent = function(type) {
  crux.quickstart.event.UserEvent.base(this, 'constructor', type, true);
};
goog.inherits(crux.quickstart.event.UserEvent, org.apache.royale.events.Event);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('crux.quickstart.event.UserEvent', crux.quickstart.event.UserEvent);


/**
 * @export
 * @const
 * @type {string}
 */
crux.quickstart.event.UserEvent.SAVE_USER_REQUESTED = "saveUser";


/**
 * @export
 * @type {crux.quickstart.model.User}
 */
crux.quickstart.event.UserEvent.prototype.user = null;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
crux.quickstart.event.UserEvent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'UserEvent', qName: 'crux.quickstart.event.UserEvent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
crux.quickstart.event.UserEvent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'user': { type: 'crux.quickstart.model.User', get_set: function (/** crux.quickstart.event.UserEvent */ inst, /** * */ v) {return v !== undefined ? inst.user = v : inst.user;}}
      };
    },
    methods: function () {
      return {
        'UserEvent': { type: '', declaredBy: 'crux.quickstart.event.UserEvent', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
crux.quickstart.event.UserEvent.prototype.ROYALE_COMPILE_FLAGS = 15;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
crux.quickstart.event.UserEvent.prototype.ROYALE_INITIAL_STATICS = Object.keys(crux.quickstart.event.UserEvent);

//# sourceMappingURL=./UserEvent.js.map
