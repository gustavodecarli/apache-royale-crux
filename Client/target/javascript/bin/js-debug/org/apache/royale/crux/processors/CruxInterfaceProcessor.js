/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/processors/CruxInterfaceProcessor.as
 * org.apache.royale.crux.processors.CruxInterfaceProcessor
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.processors.CruxInterfaceProcessor');
/* Royale Dependency List: org.apache.royale.crux.Bean,org.apache.royale.crux.IBeanFactoryAware,org.apache.royale.crux.ICrux,org.apache.royale.crux.ICruxAware,org.apache.royale.crux.IDispatcherAware,org.apache.royale.crux.IDisposable,org.apache.royale.crux.IInitializing,org.apache.royale.crux.processors.ProcessorPriority,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.crux.processors.IBeanProcessor');



/**
 * @constructor
 * @implements {org.apache.royale.crux.processors.IBeanProcessor}
 */
org.apache.royale.crux.processors.CruxInterfaceProcessor = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.processors.CruxInterfaceProcessor', org.apache.royale.crux.processors.CruxInterfaceProcessor);


/**
 * @private
 * @type {org.apache.royale.crux.ICrux}
 */
org.apache.royale.crux.processors.CruxInterfaceProcessor.prototype.org_apache_royale_crux_processors_CruxInterfaceProcessor_crux;


/**
 * @export
 * @param {org.apache.royale.crux.Bean} bean
 */
org.apache.royale.crux.processors.CruxInterfaceProcessor.prototype.setUpBean = function(bean) {
  var /** @type {*} */ obj = bean.type;
  if (org.apache.royale.utils.Language.is(obj, org.apache.royale.crux.ICruxAware))
    org.apache.royale.utils.Language.as(obj, org.apache.royale.crux.ICruxAware, true).crux = this.org_apache_royale_crux_processors_CruxInterfaceProcessor_crux;
  if (org.apache.royale.utils.Language.is(obj, org.apache.royale.crux.IBeanFactoryAware))
    org.apache.royale.utils.Language.as(obj, org.apache.royale.crux.IBeanFactoryAware, true).beanFactory = this.org_apache_royale_crux_processors_CruxInterfaceProcessor_crux.beanFactory;
  if (org.apache.royale.utils.Language.is(obj, org.apache.royale.crux.IDispatcherAware))
    org.apache.royale.utils.Language.as(obj, org.apache.royale.crux.IDispatcherAware, true).dispatcher = this.org_apache_royale_crux_processors_CruxInterfaceProcessor_crux.dispatcher;
  if (org.apache.royale.utils.Language.is(obj, org.apache.royale.crux.IInitializing))
    org.apache.royale.utils.Language.as(obj, org.apache.royale.crux.IInitializing, true).afterPropertiesSet();
};


/**
 * @export
 * @param {org.apache.royale.crux.Bean} bean
 */
org.apache.royale.crux.processors.CruxInterfaceProcessor.prototype.tearDownBean = function(bean) {
  var /** @type {*} */ obj = bean.type;
  if (org.apache.royale.utils.Language.is(obj, org.apache.royale.crux.ICruxAware))
    org.apache.royale.utils.Language.as(obj, org.apache.royale.crux.ICruxAware, true).crux = null;
  if (org.apache.royale.utils.Language.is(obj, org.apache.royale.crux.IBeanFactoryAware))
    org.apache.royale.utils.Language.as(obj, org.apache.royale.crux.IBeanFactoryAware, true).beanFactory = null;
  if (org.apache.royale.utils.Language.is(obj, org.apache.royale.crux.IDispatcherAware))
    org.apache.royale.utils.Language.as(obj, org.apache.royale.crux.IDispatcherAware, true).dispatcher = null;
  if (org.apache.royale.utils.Language.is(obj, org.apache.royale.crux.IDisposable))
    org.apache.royale.utils.Language.as(obj, org.apache.royale.crux.IDisposable, true).destroy();
};


/**
 * @export
 * @param {org.apache.royale.crux.ICrux} crux
 */
org.apache.royale.crux.processors.CruxInterfaceProcessor.prototype.init = function(crux) {
  this.org_apache_royale_crux_processors_CruxInterfaceProcessor_crux = crux;
};


org.apache.royale.crux.processors.CruxInterfaceProcessor.prototype.get__priority = function() {
  return org.apache.royale.crux.processors.ProcessorPriority.Crux_INTERFACE;
};


Object.defineProperties(org.apache.royale.crux.processors.CruxInterfaceProcessor.prototype, /** @lends {org.apache.royale.crux.processors.CruxInterfaceProcessor.prototype} */ {
/**
  * @export
  * @type {number} */
priority: {
get: org.apache.royale.crux.processors.CruxInterfaceProcessor.prototype.get__priority}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.processors.CruxInterfaceProcessor.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'CruxInterfaceProcessor', qName: 'org.apache.royale.crux.processors.CruxInterfaceProcessor', kind: 'class' }], interfaces: [org.apache.royale.crux.processors.IBeanProcessor] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.processors.CruxInterfaceProcessor.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'priority': { type: 'int', access: 'readonly', declaredBy: 'org.apache.royale.crux.processors.CruxInterfaceProcessor'}
      };
    },
    methods: function () {
      return {
        'CruxInterfaceProcessor': { type: '', declaredBy: 'org.apache.royale.crux.processors.CruxInterfaceProcessor'},
        'setUpBean': { type: 'void', declaredBy: 'org.apache.royale.crux.processors.CruxInterfaceProcessor', parameters: function () { return [ 'org.apache.royale.crux.Bean', false ]; }},
        'tearDownBean': { type: 'void', declaredBy: 'org.apache.royale.crux.processors.CruxInterfaceProcessor', parameters: function () { return [ 'org.apache.royale.crux.Bean', false ]; }},
        'init': { type: 'void', declaredBy: 'org.apache.royale.crux.processors.CruxInterfaceProcessor', parameters: function () { return [ 'org.apache.royale.crux.ICrux', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.processors.CruxInterfaceProcessor.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./CruxInterfaceProcessor.js.map
