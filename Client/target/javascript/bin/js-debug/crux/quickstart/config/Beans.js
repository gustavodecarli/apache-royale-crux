/**
 * Generated by Apache Royale Compiler from crux/quickstart/config/Beans.mxml
 * crux.quickstart.config.Beans
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('crux.quickstart.config.Beans');
/* Royale Dependency List: crux.quickstart.service.UserService,crux.quickstart.controller.UserController*/

goog.require('org.apache.royale.crux.BeanProvider');



/**
 * @constructor
 * @extends {org.apache.royale.crux.BeanProvider}
 */
crux.quickstart.config.Beans = function() {
  crux.quickstart.config.Beans.base(this, 'constructor');
  
  /**
   * @private
   * @type {crux.quickstart.service.UserService}
   */
  this.userService_;
  
  /**
   * @private
   * @type {crux.quickstart.controller.UserController}
   */
  this.userController_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    1,
    'beans',
    null,
    [
      crux.quickstart.service.UserService,
      1,
      'id',
      true,
      'userService',
      0,
      0,
      null,
      crux.quickstart.controller.UserController,
      1,
      'id',
      true,
      'userController',
      0,
      0,
      null
    ],
    0,
    0
  ]);
  
};
goog.inherits(crux.quickstart.config.Beans, org.apache.royale.crux.BeanProvider);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('crux.quickstart.config.Beans', crux.quickstart.config.Beans);



Object.defineProperties(crux.quickstart.config.Beans.prototype, /** @lends {crux.quickstart.config.Beans.prototype} */ {
/** @export */
    userService: {
    /** @this {crux.quickstart.config.Beans} */
    get: function() {
      return this.userService_;
    },
    /** @this {crux.quickstart.config.Beans} */
    set: function(value) {
      if (value != this.userService_) {
        this.userService_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'userService', null, value));
      }
    }
  },
  /** @export */
    userController: {
    /** @this {crux.quickstart.config.Beans} */
    get: function() {
      return this.userController_;
    },
    /** @this {crux.quickstart.config.Beans} */
    set: function(value) {
      if (value != this.userController_) {
        this.userController_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'userController', null, value));
      }
    }
  }
});
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
crux.quickstart.config.Beans.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Beans', qName: 'crux.quickstart.config.Beans', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
crux.quickstart.config.Beans.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'userService': { type: 'crux.quickstart.service.UserService', access: 'readwrite', declaredBy: 'crux.quickstart.config.Beans'},
        'userController': { type: 'crux.quickstart.controller.UserController', access: 'readwrite', declaredBy: 'crux.quickstart.config.Beans'}
      };
    },
    methods: function () {
      return {
        'Beans': { type: '', declaredBy: 'crux.quickstart.config.Beans'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
crux.quickstart.config.Beans.prototype.ROYALE_COMPILE_FLAGS = 15;



//# sourceMappingURL=./Beans.js.map
