/**
 * Generated by Apache Royale Compiler from org/apache/royale/html/supportClasses/MXMLStatesItemRenderer.as
 * org.apache.royale.html.supportClasses.MXMLStatesItemRenderer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.supportClasses.MXMLStatesItemRenderer');
/* Royale Dependency List: org.apache.royale.core.IState,org.apache.royale.core.IStatesImpl,org.apache.royale.events.ValueChangeEvent,org.apache.royale.utils.loadBeadFromValuesManager*/

goog.require('org.apache.royale.html.supportClasses.MXMLItemRenderer');
goog.require('org.apache.royale.core.IStatesObject');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.7
 * @constructor
 * @extends {org.apache.royale.html.supportClasses.MXMLItemRenderer}
 * @implements {org.apache.royale.core.IStatesObject}
 */
org.apache.royale.html.supportClasses.MXMLStatesItemRenderer = function() {
  org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.base(this, 'constructor');
  this.typeNames = "MXMLStatesItemRenderer";
};
goog.inherits(org.apache.royale.html.supportClasses.MXMLStatesItemRenderer, org.apache.royale.html.supportClasses.MXMLItemRenderer);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.html.supportClasses.MXMLStatesItemRenderer', org.apache.royale.html.supportClasses.MXMLStatesItemRenderer);


/**
 * @private
 * @type {Array}
 */
org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__states;


/**
 *  <code>true</code> if the array of states
 *  contains a state with this name.
 * 
 *  @asparam state The state namem.
 *  @asreturn True if state in state array
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.7
 * @export
 * @param {string} state
 * @return {boolean}
 */
org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.hasState = function(state) {
  var foreachiter0_target = this.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__states;
  for (var foreachiter0 in foreachiter0_target) 
  {
  var s = foreachiter0_target[foreachiter0];
  {
    if (s.name == state)
      return true;
  }}
  
  return false;
};


/**
 * @private
 * @type {string}
 */
org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__currentState;


/**
 * @private
 * @type {Array}
 */
org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__transitions;


org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.get__states = function() {
  return this.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__states;
};


org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.set__states = function(value) {
  this.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__states = value;
  this.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__currentState = org.apache.royale.utils.Language.string(this.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__states[0].name);
  try {
    org.apache.royale.utils.loadBeadFromValuesManager(org.apache.royale.core.IStatesImpl, "iStatesImpl", this);
  } catch (e) {
    
  }
};


org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.get__currentState = function() {
  return this.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__currentState;
};


org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.set__currentState = function(value) {
  if (value == this.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__currentState)
    return;
  var /** @type {org.apache.royale.events.ValueChangeEvent} */ event = new org.apache.royale.events.ValueChangeEvent("currentStateChange", false, false, this.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__currentState, value);
  this.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__currentState = value;
  this.dispatchEvent(event);
};


org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.get__transitions = function() {
  return this.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__transitions;
};


org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.set__transitions = function(value) {
  this.org_apache_royale_html_supportClasses_MXMLStatesItemRenderer__transitions = value;
};


Object.defineProperties(org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype, /** @lends {org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype} */ {
/**
  * @export
  * @type {Array} */
states: {
get: org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.get__states,
set: org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.set__states},
/**
  * @export
  * @type {string} */
currentState: {
get: org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.get__currentState,
set: org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.set__currentState},
/**
  * @export
  * @type {Array} */
transitions: {
get: org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.get__transitions,
set: org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.set__transitions}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MXMLStatesItemRenderer', qName: 'org.apache.royale.html.supportClasses.MXMLStatesItemRenderer', kind: 'class' }], interfaces: [org.apache.royale.core.IStatesObject] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'states': { type: 'Array', access: 'readwrite', declaredBy: 'org.apache.royale.html.supportClasses.MXMLStatesItemRenderer'},
        'currentState': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html.supportClasses.MXMLStatesItemRenderer', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'currentStateChange' } ] } ]; }},
        'transitions': { type: 'Array', access: 'readwrite', declaredBy: 'org.apache.royale.html.supportClasses.MXMLStatesItemRenderer'}
      };
    },
    methods: function () {
      return {
        'MXMLStatesItemRenderer': { type: '', declaredBy: 'org.apache.royale.html.supportClasses.MXMLStatesItemRenderer'},
        'hasState': { type: 'Boolean', declaredBy: 'org.apache.royale.html.supportClasses.MXMLStatesItemRenderer', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.html.supportClasses.MXMLStatesItemRenderer.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./MXMLStatesItemRenderer.js.map
