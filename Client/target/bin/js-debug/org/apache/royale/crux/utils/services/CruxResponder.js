/**
 * Generated by Apache Royale Compiler from org/apache/royale/crux/utils/services/CruxResponder.as
 * org.apache.royale.crux.utils.services.CruxResponder
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.crux.utils.services.CruxResponder');
/* Royale Dependency List: */

goog.require('mx.rpc.IResponder');



/**
 * @constructor
 * @implements {mx.rpc.IResponder}
 * @param {Function} resultHandler
 * @param {Function=} faultHandler
 * @param {Array=} handlerArgs
 */
org.apache.royale.crux.utils.services.CruxResponder = function(resultHandler, faultHandler, handlerArgs) {
  faultHandler = typeof faultHandler !== 'undefined' ? faultHandler : null;
  handlerArgs = typeof handlerArgs !== 'undefined' ? handlerArgs : null;
  this.org_apache_royale_crux_utils_services_CruxResponder_resultHandler = resultHandler;
  this.org_apache_royale_crux_utils_services_CruxResponder_faultHandler = faultHandler;
  this.org_apache_royale_crux_utils_services_CruxResponder_handlerArgs = handlerArgs;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.crux.utils.services.CruxResponder', org.apache.royale.crux.utils.services.CruxResponder);


/**
 * @private
 * @type {Function}
 */
org.apache.royale.crux.utils.services.CruxResponder.prototype.org_apache_royale_crux_utils_services_CruxResponder_resultHandler;


/**
 * @private
 * @type {Function}
 */
org.apache.royale.crux.utils.services.CruxResponder.prototype.org_apache_royale_crux_utils_services_CruxResponder_faultHandler;


/**
 * @private
 * @type {Array}
 */
org.apache.royale.crux.utils.services.CruxResponder.prototype.org_apache_royale_crux_utils_services_CruxResponder_handlerArgs;


/**
 * @export
 * @param {Object} data
 */
org.apache.royale.crux.utils.services.CruxResponder.prototype.result = function(data) {
  if (this.org_apache_royale_crux_utils_services_CruxResponder_handlerArgs == null) {
    this.org_apache_royale_crux_utils_services_CruxResponder_resultHandler(data);
  } else {
    this.org_apache_royale_crux_utils_services_CruxResponder_resultHandler.apply(null, [data].concat(this.org_apache_royale_crux_utils_services_CruxResponder_handlerArgs));
  }
};


/**
 * @export
 * @param {Object} info
 */
org.apache.royale.crux.utils.services.CruxResponder.prototype.fault = function(info) {
  if (this.org_apache_royale_crux_utils_services_CruxResponder_faultHandler != null) {
    if (this.org_apache_royale_crux_utils_services_CruxResponder_handlerArgs == null) {
      this.org_apache_royale_crux_utils_services_CruxResponder_faultHandler(info);
    } else {
      try {
        this.org_apache_royale_crux_utils_services_CruxResponder_faultHandler(info);
      } catch (e) {
        this.org_apache_royale_crux_utils_services_CruxResponder_faultHandler.apply(null, [info].concat(this.org_apache_royale_crux_utils_services_CruxResponder_handlerArgs));
      }
    }
  } else {
  }
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.crux.utils.services.CruxResponder.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'CruxResponder', qName: 'org.apache.royale.crux.utils.services.CruxResponder', kind: 'class' }], interfaces: [mx.rpc.IResponder] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.crux.utils.services.CruxResponder.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'CruxResponder': { type: '', declaredBy: 'org.apache.royale.crux.utils.services.CruxResponder', parameters: function () { return [ 'Function', false ,'Function', true ,'Array', true ]; }},
        'result': { type: 'void', declaredBy: 'org.apache.royale.crux.utils.services.CruxResponder', parameters: function () { return [ 'Object', false ]; }},
        'fault': { type: 'void', declaredBy: 'org.apache.royale.crux.utils.services.CruxResponder', parameters: function () { return [ 'Object', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.crux.utils.services.CruxResponder.prototype.ROYALE_COMPILE_FLAGS = 10;
